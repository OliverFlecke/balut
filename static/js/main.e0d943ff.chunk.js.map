{"version":3,"sources":["styles/colors.ts","styles/elements.tsx","components/Game/Dice.tsx","components/Game/state/gameUtils.ts","components/Game/state/actions/RollAction.ts","components/Game/state/GameState.ts","Category.ts","components/Game/state/actions/ToggleDiceAction.ts","components/Game/state/actions/ResetRollAction.ts","styles/table.ts","utils/enums.ts","components/Board/state/actions/StoreValue.ts","components/Board/state/BalutState.ts","components/Board/state/actions/ClearBoard.ts","components/Board/BoardControls.tsx","components/Board/FinalScore.tsx","components/Board/FooterRow.tsx","components/Board/state/actions/ChangeName.ts","components/Board/HeaderRow.tsx","components/Board/Cell.tsx","components/Board/rules.ts","components/Board/Row.tsx","components/Board/Board.tsx","components/Game/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["darkColors","borderColor","theme","dark","backgroundColor","variants","disabled","primary","color","Button","styled","button","Dice","dice","locked","index","toggleLock","onClick","useCallback","diceStyles","size","doRoll","current","Array","map","v","i","Math","floor","random","resetLocked","sumNumbers","roll","reduce","acc","RollAction","state","rollNumber","gameReducer","action","React","createContext","Category","initialGameState","ToggleDiceAction","this","b","ResetRollAction","undefined","Table","table","Tr","tr","Th","th","Td","td","enumValues","e","Object","keys","filter","key","x","parseInt","StoreValue","category","value","values","assign","balutInitial","stored","localStorage","getItem","JSON","parse","initValues","initState","BalutContext","dispatch","ClearBoard","removeItem","BoardControls","useContext","clearBoard","Wrapper","variant","div","FinalScore","points","ScoreContainer","FooterRow","total","extraPoints","colSpan","ChangeName","name","console","log","HeaderRow","onBlur","currentTarget","innerText","NameCell","NameWrapper","NameInputField","contentEditable","dangerouslySetInnerHTML","__html","span","Cell","suggestion","TdCell","toString","valueToString","default","categoryPoints","Balut","length","Chance","sumValues","FullHouse","Straight","Sixes","Fives","Fours","finalPointScoreThresholds","calculateSuggestion","some","every","includes","isStraight","Set","from","count","isFullHouse","Row","title","useMemo","categoryToString","sum","first","thisIsFirst","categories","Board","onValueWritten","reducer","newState","setItem","stringify","balutReducer","useReducer","a","score","extraPointScore","totalPoints","Provider","Game","useState","setRoll","useEffect","executeRoll","interval","setInterval","setTimeout","clearInterval","newRoll","Container","DiceContainer","ButtonContainer","App","mode","GlobalStyle","Main","H1","mainStyles","css","main","createGlobalStyle","h1","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e0d943ff.chunk.js","sourcesContent":["import theme from 'styled-theming';\n\nexport const darkColors = {\n\tborder: '#CCC',\n\tcolor: '#CCC',\n\tbackgroundColor: '#000',\n\tsecondaryBackgroundColor: '#222',\n\tsuggestion: '#09F',\n};\n\nexport const borderColor = theme('mode', {\n\tdark: darkColors.border,\n});\n","import styled from 'styled-components';\nimport theme from 'styled-theming';\nimport { darkColors } from './colors';\n\nconst backgroundColor = theme.variants('mode', 'variant', {\n\tdisabled: { dark: 'darkgray' },\n\tprimary: { dark: 'darkblue' },\n});\nconst color = theme.variants('mode', 'variant', {\n\tdisabled: { dark: darkColors.color },\n\tprimary: { dark: darkColors.color },\n});\n\nexport const Button = styled.button`\n\tbackground-color: ${backgroundColor};\n\tcolor: ${color};\n\tpadding: 10px;\n\tmargin: 6px;\n\tborder: none;\n\tborder-radius: 6px;\n\tfont-size: 1.2em;\n`;\n","import React, { useCallback } from 'react';\nimport {\n\tFaDiceFive,\n\tFaDiceFour,\n\tFaDiceOne,\n\tFaDiceSix,\n\tFaDiceThree,\n\tFaDiceTwo,\n} from 'react-icons/fa/index';\nimport { IconBaseProps } from 'react-icons/lib';\n\ninterface DiceProps {\n\tdice: number;\n\tlocked: boolean;\n\tindex: number;\n\ttoggleLock: (index: number) => void;\n}\n\nexport const Dice = ({ dice, locked, index, toggleLock }: DiceProps) => {\n\tconst onClick = useCallback(() => toggleLock(index), [toggleLock, index]);\n\tconst color = locked ? 'red' : 'white';\n\n\tswitch (dice) {\n\t\tcase 1:\n\t\t\treturn <FaDiceOne {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 2:\n\t\t\treturn <FaDiceTwo {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 3:\n\t\t\treturn <FaDiceThree {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 4:\n\t\t\treturn <FaDiceFour {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 5:\n\t\t\treturn <FaDiceFive {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 6:\n\t\t\treturn <FaDiceSix {...diceStyles} color={color} onClick={onClick} />;\n\t}\n\treturn null;\n};\n\nconst diceStyles: IconBaseProps = {\n\tsize: 60,\n};\n","import { RollLock, Roll } from './GameState';\n\nexport function randomDice(): number {\n\treturn Math.floor(Math.random() * 6) + 1;\n}\n\nexport function doRoll(locked: RollLock, current?: Roll): Roll {\n\treturn (current ?? [...Array(5)]).map((v, i) =>\n\t\tlocked[i] ? v : randomDice(),\n\t) as Roll;\n}\n\nexport function resetLocked(): RollLock {\n\treturn [...Array(5)].map(() => false) as RollLock;\n}\n\nexport function sumNumbers(roll: number[]) {\n\treturn roll.reduce((acc, v) => acc + v, 0);\n}\n","import { GameAction, GameState } from '../GameState';\nimport { doRoll } from '../gameUtils';\n\nexport class RollAction implements GameAction {\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\troll: doRoll(state.locked, state.roll),\n\t\t\trollNumber: state.rollNumber + 1,\n\t\t};\n\t}\n}\n","import React from 'react';\nimport { resetLocked } from './gameUtils';\n\nexport interface GameState {\n\troll?: Roll;\n\tlocked: RollLock;\n\trollNumber: number;\n}\n\nexport interface GameAction {\n\treduce(state: GameState): GameState;\n}\n\nexport function gameReducer(state: GameState, action: GameAction): GameState {\n\treturn action.reduce(state);\n}\n\nexport const GameContext = React.createContext<{\n\tstate: GameState;\n\tdispatch: React.Dispatch<GameAction>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}>({} as any);\n\nexport const initialGameState: GameState = {\n\trollNumber: 0,\n\tlocked: resetLocked(),\n};\n\nexport type Roll = [number, number, number, number, number];\nexport type RollLock = [boolean, boolean, boolean, boolean, boolean];\n","export enum Category {\n\tFours,\n\tFives,\n\tSixes,\n\tStraight,\n\tFullHouse,\n\tChance,\n\tBalut,\n}\n","import { GameAction, GameState, RollLock } from '../GameState';\n\nexport class ToggleDiceAction implements GameAction {\n\tindex: number;\n\n\tconstructor(index: number) {\n\t\tthis.index = index;\n\t}\n\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocked: state.locked.map((b, i) =>\n\t\t\t\tthis.index === i ? !b : b,\n\t\t\t) as RollLock,\n\t\t};\n\t}\n}\n","import { GameAction, GameState } from '../GameState';\nimport { resetLocked } from '../gameUtils';\n\nexport class ResetRollAction implements GameAction {\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocked: resetLocked(),\n\t\t\troll: undefined,\n\t\t\trollNumber: 0,\n\t\t};\n\t}\n}\n","import styled from 'styled-components';\nimport { borderColor } from './colors';\n\nexport const maxWidth = '760px';\n\nexport const Table = styled.table`\n\tborder-collapse: collapse;\n\twidth: 100%;\n\tmax-width: ${maxWidth};\n`;\n\nexport const Tr = styled.tr``;\nexport const Th = styled.th`\n\ttext-align: left;\n\tborder: 1px solid ${borderColor};\n\tpadding: 4px;\n`;\nexport const Td = styled.td`\n\tborder: 1px solid ${borderColor};\n\tpadding: 4px;\n\ttext-align: center;\n\tmin-width: 20px;\n`;\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function enumStrings(e: any): string[] {\n\treturn Object.keys(e).filter((key) => typeof e[key] === 'number');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function enumValues(e: any): number[] {\n\treturn Object.keys(e)\n\t\t.filter((key) => typeof e[key] !== 'number')\n\t\t.map((x) => parseInt(x));\n}\n","import { BalutAction, BalutState, Value, BalutValues } from '../BalutState';\nimport { Category } from '../../../../Category';\n\nexport class StoreValue implements BalutAction {\n\tpublic category: Category;\n\tpublic index: number;\n\tpublic value: Value;\n\n\tconstructor(category: Category, index: number, value: Value) {\n\t\tthis.category = category;\n\t\tthis.index = index;\n\t\tthis.value = value;\n\t}\n\n\treduce(state: BalutState): BalutState {\n\t\tconst values: BalutValues = {};\n\t\tObject.assign(values, state.values);\n\t\tvalues[Category[this.category]][this.index] = this.value;\n\n\t\treturn { ...state, values };\n\t}\n}\n","import React from 'react';\nimport { enumStrings } from '../../../utils/enums';\nimport { Category } from '../../../Category';\nimport { StoreValue } from './actions/StoreValue';\n\n// Type to represent a entry on the Balut board.\n// 'null' = cell unused\n// 'X' = cell scratched\n// else the value entered\nexport type Value = number | 'X' | null;\nexport type RowState = [Value, Value, Value, Value];\n\nexport interface BalutState {\n\tvalues: BalutValues;\n\tname?: string;\n}\n\nexport interface BalutAction {\n\treduce(state: BalutState): BalutState;\n}\n\ninterface BalutReducerArgs {\n\tonValueWritten?: () => void;\n}\n\nexport function balutReducer({\n\tonValueWritten,\n}: BalutReducerArgs): (state: BalutState, action: BalutAction) => BalutState {\n\treturn (state, action) => {\n\t\tconst newState = action.reduce(state);\n\t\tlocalStorage.setItem('state', JSON.stringify(newState));\n\n\t\tif (action instanceof StoreValue && onValueWritten) {\n\t\t\tonValueWritten();\n\t\t}\n\n\t\treturn newState;\n\t};\n}\n\nexport const balutInitial: BalutState = initState();\n\nexport const BalutContext = React.createContext<{\n\tstate: BalutState;\n\tdispatch: React.Dispatch<BalutAction>;\n}>({\n\tstate: balutInitial,\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tdispatch: () => {},\n});\n\nexport type BalutValues = { [key: string]: RowState };\n\nfunction initState(): BalutState {\n\tconst stored = localStorage.getItem('state');\n\n\tif (stored !== null) {\n\t\treturn JSON.parse(stored) as BalutState;\n\t}\n\n\treturn {\n\t\tvalues: initValues(),\n\t};\n}\n\nexport function initValues() {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn enumStrings(Category).reduce((acc: any, key) => {\n\t\tacc[key] = [null, null, null, null];\n\n\t\treturn acc;\n\t}, {});\n}\n","import { BalutAction, BalutState, initValues } from '../BalutState';\n\nexport class ClearBoard implements BalutAction {\n\treduce(state: BalutState): BalutState {\n\t\tlocalStorage.removeItem('state');\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tvalues: initValues(),\n\t\t};\n\t}\n}\n","import React, { useCallback, useContext } from 'react';\nimport { Button } from '../../styles/elements';\nimport { ClearBoard } from './state/actions/ClearBoard';\nimport { BalutContext } from './state/BalutState';\nimport styled from 'styled-components';\n\nexport const BoardControls = () => {\n\tconst { dispatch } = useContext(BalutContext);\n\tconst clearBoard = useCallback(() => {\n\t\tdispatch(new ClearBoard());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Button variant=\"primary\" onClick={clearBoard}>\n\t\t\t\tNew game\n\t\t\t</Button>\n\t\t</Wrapper>\n\t);\n};\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: right;\n\tmargin: 0 -6px -6px;\n`;\n","import React from 'react';\nimport { maxWidth } from '../../styles/table';\nimport styled from 'styled-components';\n\ninterface FinalScoreProps {\n\tpoints: number;\n}\n\nexport const FinalScore = ({ points }: FinalScoreProps) => (\n\t<Wrapper>\n\t\t<ScoreContainer>\n\t\t\t<span>Final score: </span>\n\t\t\t<span>{points}</span>\n\t\t</ScoreContainer>\n\t</Wrapper>\n);\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: flex-end;\n\tmargin: 6px 0;\n\tmax-width: ${maxWidth};\n`;\n\nconst ScoreContainer = styled.div`\n\tfont-size: 1.4em;\n\tborder-bottom: 1px solid white;\n`;\n","import React from 'react';\nimport { Tr, Td } from '../../styles/table';\n\ninterface FooterRowProps {\n\ttotal: number;\n\textraPoints: number;\n}\n\nexport const FooterRow = ({ total, extraPoints }: FooterRowProps) => (\n\t<tfoot>\n\t\t<Tr>\n\t\t\t<td colSpan={5} />\n\t\t\t<Td>{total}</Td>\n\t\t\t<Td>{extraPoints}</Td>\n\t\t</Tr>\n\t</tfoot>\n);\n","import { BalutAction, BalutState } from '../BalutState';\n\nexport class ChangeName implements BalutAction {\n\tname?: string;\n\n\tconstructor(name?: string) {\n\t\tthis.name = name;\n\t}\n\n\treduce(state: BalutState): BalutState {\n\t\tconsole.log(`Changing name ${this.name}`);\n\t\treturn {\n\t\t\t...state,\n\t\t\tname: this.name,\n\t\t};\n\t}\n}\n","import React, { useContext, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Td, Tr } from '../../styles/table';\nimport { BalutContext } from './state/BalutState';\nimport { ChangeName } from './state/actions/ChangeName';\n\nexport const HeaderRow = () => {\n\tconst { state, dispatch } = useContext(BalutContext);\n\tconst onBlur = useCallback(\n\t\t(e: React.FormEvent<HTMLSpanElement>) => {\n\t\t\tdispatch(new ChangeName(e.currentTarget.innerText ?? undefined));\n\t\t},\n\t\t[dispatch],\n\t);\n\n\treturn (\n\t\t<thead>\n\t\t\t<Tr>\n\t\t\t\t<NameCell colSpan={5}>\n\t\t\t\t\t<NameWrapper>\n\t\t\t\t\t\tName:\n\t\t\t\t\t\t<NameInputField\n\t\t\t\t\t\t\tcontentEditable={true}\n\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: state.name ?? '' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</NameWrapper>\n\t\t\t\t</NameCell>\n\t\t\t\t<Td>Total</Td>\n\t\t\t\t<Td>Points</Td>\n\t\t\t</Tr>\n\t\t</thead>\n\t);\n};\n\nconst NameCell = styled(Td)`\n\ttext-align: left;\n\tborder: none;\n`;\n\nconst NameWrapper = styled.div`\n\tdisplay: flex;\n`;\n\nconst NameInputField = styled.span`\n\twidth: 100%;\n\tflex-grow: 1;\n\tmargin: 0 6px;\n`;\n","import React, { useCallback, useContext } from 'react';\nimport styled from 'styled-components';\nimport theme from 'styled-theming';\nimport { Category } from '../../Category';\nimport { darkColors } from '../../styles/colors';\nimport { Td } from '../../styles/table';\nimport { StoreValue } from './state/actions/StoreValue';\nimport { BalutContext, Value } from './state/BalutState';\n\ninterface CellProps {\n\tcategory: Category;\n\tvalue: Value;\n\tsuggestion?: Value;\n\tindex: number;\n}\n\nexport const Cell = ({ category, value, index, suggestion }: CellProps) => {\n\tconst { dispatch } = useContext(BalutContext);\n\tconst onClick = useCallback(() => {\n\t\tif (suggestion) {\n\t\t\tdispatch(new StoreValue(category, index, suggestion));\n\t\t}\n\t}, [dispatch, index, suggestion, category]);\n\n\treturn (\n\t\t<TdCell onClick={onClick} variant={suggestion ? 'suggestion' : 'default'}>\n\t\t\t{valueToString(value !== null ? value : suggestion)}\n\t\t</TdCell>\n\t);\n};\n\nfunction valueToString(value?: Value): string {\n\tif (value === undefined || value === null || value === 0) {\n\t\treturn '';\n\t} else if (value === 'X') {\n\t\treturn 'X';\n\t} else {\n\t\treturn value.toString();\n\t}\n}\n\nconst backgroundColor = theme('mode', {\n\tdark: darkColors.secondaryBackgroundColor,\n});\n\nconst color = theme.variants('mode', 'variant', {\n\tdefault: { dark: darkColors.color },\n\tsuggestion: { dark: darkColors.suggestion },\n});\n\nconst TdCell = styled(Td)`\n\tbackground-color: ${backgroundColor};\n\tcolor: ${color};\n\tuser-select: none;\n`;\n","import { Category } from '../../Category';\nimport { Roll } from '../Game/state/GameState';\nimport { sumNumbers } from '../Game/state/gameUtils';\nimport { RowState, Value } from './state/BalutState';\n\nexport function categoryPoints(category: Category, values: RowState): number {\n\tswitch (category) {\n\t\tcase Category.Balut:\n\t\t\treturn 2 * values.filter((x) => typeof x === 'number' && x !== 0).length;\n\t\tcase Category.Chance:\n\t\t\treturn sumValues(values) >= 100 ? 2 : 0;\n\t\tcase Category.FullHouse:\n\t\t\treturn values.filter((x) => typeof x === 'number').length === 4 ? 3 : 0;\n\t\tcase Category.Straight:\n\t\t\treturn values.filter((x) => typeof x === 'number').length === 4 ? 4 : 0;\n\t\tcase Category.Sixes:\n\t\t\treturn sumValues(values) >= 78 ? 2 : 0;\n\t\tcase Category.Fives:\n\t\t\treturn sumValues(values) >= 65 ? 2 : 0;\n\t\tcase Category.Fours:\n\t\t\treturn sumValues(values) >= 52 ? 2 : 0;\n\t}\n}\n\nexport function sumValues(values: RowState): number {\n\treturn values\n\t\t.filter((x) => typeof x === 'number')\n\t\t.map((x) => x as number)\n\t\t.reduce((acc, v) => acc + v, 0);\n}\n\nconst finalPointScoreThresholds = [300, 350, 400, 450, 500, 550, 600, 650];\nexport function extraPointScore(score: number): number {\n\tlet points = -2;\n\n\tfor (const threshold of finalPointScoreThresholds) {\n\t\tif (score < threshold) {\n\t\t\tbreak;\n\t\t}\n\t\tpoints++;\n\t}\n\treturn points;\n}\n\nexport function calculateSuggestion(category: Category, roll?: Roll): Value {\n\tif (!roll) {\n\t\treturn null;\n\t}\n\n\tswitch (category) {\n\t\tcase Category.Fours:\n\t\t\treturn sumNumbers(roll.filter((x) => x === 4));\n\t\tcase Category.Fives:\n\t\t\treturn sumNumbers(roll.filter((x) => x === 5));\n\t\tcase Category.Sixes:\n\t\t\treturn sumNumbers(roll.filter((x) => x === 6));\n\t\tcase Category.Straight:\n\t\t\treturn isStraight(roll) ? sumNumbers(roll) : 'X';\n\t\tcase Category.FullHouse:\n\t\t\treturn isFullHouse(roll) ? sumNumbers(roll) : 'X';\n\t\tcase Category.Chance:\n\t\t\treturn sumNumbers(roll);\n\t\tcase Category.Balut:\n\t\t\treturn roll.every((x) => x === roll[0]) ? sumNumbers(roll) + 20 : 'X';\n\t}\n}\n\nexport function isStraight(roll: Roll): boolean {\n\treturn (\n\t\troll.some((x) => x === 1 || x === 6) &&\n\t\t[2, 3, 4, 5].every((x) => roll.includes(x))\n\t);\n}\n\nexport function isFullHouse(roll: Roll): boolean {\n\tconst values = new Set(roll);\n\tif (values.size !== 2) {\n\t\treturn false;\n\t}\n\n\treturn Array.from(values).every((v) => {\n\t\tconst count = roll.filter((x) => x === v).length;\n\t\treturn count === 3 || count === 2;\n\t});\n}\n","import React, { useMemo } from 'react';\nimport { Category } from '../../Category';\nimport { Td, Th, Tr } from '../../styles/table';\nimport { Roll } from '../Game/state/GameState';\nimport { Cell } from './Cell';\nimport { calculateSuggestion, categoryPoints, sumValues } from './rules';\nimport { RowState } from './state/BalutState';\n\ninterface RowProps {\n\tcategory: Category;\n\tvalues: RowState;\n\troll?: Roll;\n}\n\nexport const Row = ({ category, values, roll }: RowProps) => {\n\tconst title = useMemo(() => categoryToString(category), [category]);\n\tconst sum = sumValues(values);\n\tconst points = categoryPoints(category, values);\n\tconst suggestion = calculateSuggestion(category, roll);\n\tlet first = true;\n\n\treturn (\n\t\t<Tr>\n\t\t\t<Th>{title}</Th>\n\t\t\t{values.map((value, i) => {\n\t\t\t\tconst thisIsFirst = first && value === null;\n\t\t\t\tif (thisIsFirst) {\n\t\t\t\t\tfirst = false;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Cell\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tcategory={category}\n\t\t\t\t\t\tsuggestion={\n\t\t\t\t\t\t\tthisIsFirst ? (suggestion === 0 ? 'X' : suggestion) : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<Td>{sum}</Td>\n\t\t\t<Td>{points}</Td>\n\t\t</Tr>\n\t);\n};\n\nfunction categoryToString(category: Category): string {\n\tif (category === Category.FullHouse) {\n\t\treturn 'Full house';\n\t}\n\treturn Category[category];\n}\n","import React, { useCallback, useReducer } from 'react';\nimport { Category } from '../../Category';\nimport { Table } from '../../styles/table';\nimport { enumValues } from '../../utils/enums';\nimport { BoardControls } from './BoardControls';\nimport { FinalScore } from './FinalScore';\nimport { FooterRow } from './FooterRow';\nimport { HeaderRow } from './HeaderRow';\nimport { Row } from './Row';\nimport { categoryPoints, extraPointScore, sumValues } from './rules';\nimport { BalutContext, balutInitial, balutReducer } from './state/BalutState';\nimport { Roll } from '../Game/state/GameState';\n\nconst categories = enumValues(Category);\n\ninterface BoardProps {\n\troll?: Roll;\n\tonValueWritten?: () => void;\n}\n\nexport const Board = ({ roll, onValueWritten }: BoardProps) => {\n\tconst reducer = useCallback(balutReducer({ onValueWritten }), []);\n\tconst [state, dispatch] = useReducer(reducer, balutInitial);\n\n\tconst total = Object.keys(state.values)\n\t\t.map((key) => sumValues(state.values[key]))\n\t\t.reduce((a, b) => a + b);\n\tconst extraPoints = extraPointScore(total);\n\tconst totalPoints =\n\t\textraPoints +\n\t\tenumValues(Category)\n\t\t\t.map((key) => {\n\t\t\t\treturn categoryPoints(\n\t\t\t\t\tkey,\n\t\t\t\t\tstate.values[(Category[key] as unknown) as number],\n\t\t\t\t);\n\t\t\t})\n\t\t\t.reduce((a, b) => a + b, 0);\n\n\treturn (\n\t\t<BalutContext.Provider value={{ state, dispatch }}>\n\t\t\t<Table>\n\t\t\t\t<HeaderRow />\n\t\t\t\t<tbody>\n\t\t\t\t\t{categories.map((x) => (\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\tkey={x}\n\t\t\t\t\t\t\tcategory={x}\n\t\t\t\t\t\t\tvalues={state.values[(Category[x] as unknown) as number]}\n\t\t\t\t\t\t\troll={roll}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t\t<FooterRow extraPoints={extraPoints} total={total} />\n\t\t\t</Table>\n\t\t\t<FinalScore points={totalPoints} />\n\t\t\t<BoardControls />\n\t\t</BalutContext.Provider>\n\t);\n};\n","import React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '../../styles/elements';\nimport { Dice } from './Dice';\nimport { RollAction } from './state/actions/RollAction';\nimport { gameReducer, initialGameState } from './state/GameState';\nimport { ToggleDiceAction } from './state/actions/ToggleDiceAction';\nimport { doRoll } from './state/gameUtils';\nimport { ResetRollAction } from './state/actions/ResetRollAction';\nimport { Board } from '../Board/Board';\n\nexport const Game = () => {\n\tconst [state, dispatch] = useReducer(gameReducer, initialGameState);\n\tconst [roll, setRoll] = useState(state.roll);\n\tuseEffect(() => setRoll(state.roll), [state.roll]);\n\n\tconst executeRoll = useCallback(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetRoll(doRoll(state.locked, state.roll));\n\t\t}, 50);\n\n\t\tsetTimeout(() => {\n\t\t\tclearInterval(interval);\n\t\t\tdispatch(new RollAction());\n\t\t}, 1000);\n\t}, [dispatch, state]);\n\tconst toggleLock = useCallback(\n\t\t(index: number) => dispatch(new ToggleDiceAction(index)),\n\t\t[dispatch],\n\t);\n\tconst newRoll = useCallback(() => {\n\t\tdispatch(new ResetRollAction());\n\t}, [dispatch]);\n\tconst onValueWritten = useCallback(() => newRoll(), [newRoll]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Board roll={state.roll} onValueWritten={onValueWritten} />\n\t\t\t<h3>\n\t\t\t\t{state.rollNumber === 0\n\t\t\t\t\t? 'Roll your dice!'\n\t\t\t\t\t: `Roll #${state.rollNumber} of 3`}\n\t\t\t</h3>\n\t\t\t<DiceContainer>\n\t\t\t\t{roll?.map((x, i) => (\n\t\t\t\t\t<Dice\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tdice={x}\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\ttoggleLock={toggleLock}\n\t\t\t\t\t\tlocked={state.locked[i]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</DiceContainer>\n\n\t\t\t<ButtonContainer>\n\t\t\t\t<Button\n\t\t\t\t\tvariant={state.rollNumber === 3 ? 'disabled' : 'primary'}\n\t\t\t\t\tonClick={executeRoll}\n\t\t\t\t\tdisabled={state.rollNumber === 3}\n\t\t\t\t>\n\t\t\t\t\tRoll\n\t\t\t\t</Button>\n\t\t\t\t{/* <Button variant=\"primary\" onClick={newRoll}>\n\t\t\t\t\tNew turn\n\t\t\t\t</Button> */}\n\t\t\t</ButtonContainer>\n\t\t</Container>\n\t);\n};\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst DiceContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n`;\n\nconst ButtonContainer = styled.div`\n\tdisplay: flex;\n\tmargin: 6px -6px;\n`;\n","import React, { useState } from 'react';\nimport styled, {\n\tcreateGlobalStyle,\n\tcss,\n\tThemeProvider,\n} from 'styled-components';\nimport theme from 'styled-theming';\nimport { Game } from './components/Game/Game';\nimport { darkColors } from './styles/colors';\n\nfunction App() {\n\tconst [theme, setCurrentTheme] = useState<string>(\n\t\tlocalStorage.getItem('theme') ?? 'dark',\n\t);\n\n\t// const setTheme = useCallback(\n\t// \t(theme: string) => {\n\t// \t\tlocalStorage.setItem('theme', theme);\n\t// \t\tsetCurrentTheme(theme);\n\t// \t},\n\t// \t[setCurrentTheme],\n\t// );\n\n\treturn (\n\t\t<ThemeProvider theme={{ mode: theme }}>\n\t\t\t<GlobalStyle />\n\t\t\t<Main>\n\t\t\t\t<header>\n\t\t\t\t\t<H1>Balut</H1>\n\t\t\t\t</header>\n\t\t\t\t<section>\n\t\t\t\t\t<Game />\n\t\t\t\t</section>\n\t\t\t</Main>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n\nconst mainStyles = theme('mode', {\n\tdark: css`\n\t\tbackground-color: ${darkColors.backgroundColor};\n\t\tcolor: ${darkColors.color};\n\t`,\n});\n\nconst Main = styled.main`\n\t${mainStyles}\n\tpadding: 12px;\n`;\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tfont-family: Futura;\n\t\t${mainStyles}\n\t}\n`;\n\nconst H1 = styled.h1`\n\tmargin: 0;\n\tfont-size: 3em;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}