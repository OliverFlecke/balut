{"version":3,"sources":["styles/colors.ts","styles/elements.tsx","Category.ts","components/Chat/Chat.tsx","styles/table.ts","utils/enums.ts","components/Game/state/gameUtils.ts","components/Board/FinalScore.tsx","components/Board/FooterRow.tsx","components/Board/HeaderRow.tsx","components/Board/Cell.tsx","components/Board/rules.ts","components/Board/Row.tsx","components/Board/Board.tsx","components/Board/state/actions/StoreValue.ts","components/Board/state/BalutState.ts","components/Game/Dice.tsx","components/Game/state/actions/ResetRollAction.ts","components/Game/state/actions/RollAction.ts","components/Game/state/actions/ToggleDiceAction.ts","components/Game/state/GameState.ts","components/Board/BoardControls.tsx","components/Board/state/actions/ClearBoard.ts","components/Game/Game.tsx","components/Navigation.tsx","components/Rules.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["darkColors","borderColor","theme","dark","navColor","Category","backgroundColor","variants","disabled","primary","color","Button","styled","button","Ul","ul","Li","li","Chat","sessionInputRef","useRef","useEffect","onKeyDown","useCallback","e","key","currentTarget","value","joinSession","ref","onClick","categoryToString","category","FullHouse","Table","table","Tr","tr","Th","th","Td","td","enumValues","Object","keys","filter","map","x","parseInt","doRoll","locked","current","Array","v","i","Math","floor","random","resetLocked","sumNumbers","roll","reduce","acc","FinalScore","points","Wrapper","ScoreContainer","div","FooterRow","total","extraPoints","colSpan","HeaderRow","Cell","index","suggestion","writeValue","TdCell","variant","undefined","toString","valueToString","default","categoryPoints","values","Balut","length","Chance","sumValues","Straight","Sixes","Fives","Fours","finalPointScoreThresholds","calculateSuggestion","some","every","includes","isStraight","Set","size","from","count","isFullHouse","Row","title","useMemo","sum","first","findIndex","categories","Board","score","extraPointScore","totalPoints","StoreValue","this","state","assign","balutInitial","stored","localStorage","getItem","JSON","parse","initValues","initState","React","createContext","dispatch","Dice","dice","toggleLock","diceStyles","ResetRollAction","rollNumber","RollAction","ToggleDiceAction","b","gameReducer","action","initialGameState","BoardControls","clearBoard","ClearBoard","removeItem","Game","useReducer","onValueWritten","newState","setItem","stringify","balutReducer","balutState","balutDispatch","useState","setRoll","executeRoll","interval","setInterval","setTimeout","clearInterval","newRoll","Container","DiceContainer","ButtonContainer","Navigation","Nav","NavUl","NavLi","to","nav","Rules","description","lower","higher","App","setCurrentTheme","mode","GlobalStyle","Main","Header","H1","path","mainStyles","css","main","createGlobalStyle","header","h1","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sPAEaA,EACJ,OADIA,EAEL,OAFKA,EAGK,OAHLA,EAIc,OAJdA,EAKA,OALAA,EAMF,OAGEC,EAAcC,IAAM,OAAQ,CACxCC,KAAMH,IAGMI,EAAWF,IAAM,OAAQ,CACrCC,KAAMH,I,6dCZP,ICJYK,EDINC,EAAkBJ,IAAMK,SAAS,OAAQ,UAAW,CACzDC,SAAU,CAAEL,KAAM,YAClBM,QAAS,CAAEN,KAAM,cAEZO,EAAQR,IAAMK,SAAS,OAAQ,UAAW,CAC/CC,SAAU,CAAEL,KAAMH,GAClBS,QAAS,CAAEN,KAAMH,KAGLW,EAASC,IAAOC,OAAV,IACEP,EACXI,GAQGI,EAAKF,IAAOG,GAAV,KAOFC,EAAKJ,IAAOK,GAAV,KE1BFC,EAAO,WACnB,IACMC,EAAkBC,iBAAyB,MACjDC,qBAAU,cAOP,IAEH,IAAMC,EAAYC,uBAAY,SAACC,GAChB,UAAVA,EAAEC,MAOLD,EAAEE,cAAcC,MAAQ,MAEvB,IAEGC,EAAcL,uBAAY,cAE7B,IAEH,OACC,6BACC,6BACC,2BAAOM,IAAKV,IACZ,kBAACR,EAAD,CAAQmB,QAASF,GAAjB,iBAED,4CACA,2BAAON,UAAWA,MD7Bd,SAASS,EAAiBC,GAChC,OAAIA,IAAa3B,EAAS4B,UAClB,aAED5B,EAAS2B,G,2fAdL3B,O,iBAAAA,I,iBAAAA,I,iBAAAA,I,uBAAAA,I,yBAAAA,I,mBAAAA,I,kBAAAA,M,KEGL,IAEM6B,EAAQtB,IAAOuB,MAAV,IAFM,SAQXC,EAAKxB,IAAOyB,GAAV,KACFC,EAAK1B,IAAO2B,GAAV,IAEMtC,GAGRuC,EAAK5B,IAAO6B,GAAV,IACMxC,GCZd,SAASyC,EAAWlB,GAC1B,OAAOmB,OAAOC,KAAKpB,GACjBqB,QAAO,SAACpB,GAAD,MAA2B,kBAAXD,EAAEC,MACzBqB,KAAI,SAACC,GAAD,OAAOC,SAASD,M,YCHhB,SAASE,EAAOC,EAAkBC,GACxC,OAAO,OAACA,QAAD,IAACA,IAAD,YAAgBC,MAAM,KAAKN,KAAI,SAACO,EAAGC,GAAJ,OACrCJ,EAAOI,GAAKD,EALNE,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,KASjC,SAASC,IACf,OAAO,YAAIN,MAAM,IAAIN,KAAI,kBAAM,KAGzB,SAASa,EAAWC,GAC1B,OAAOA,EAAKC,QAAO,SAACC,EAAKT,GAAN,OAAYS,EAAMT,IAAG,G,2SCTlC,IAAMU,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzB,kBAACC,EAAD,KACC,kBAACC,EAAD,KACC,+CACA,8BAAOF,MAKJC,EAAUrD,IAAOuD,IAAV,IHdW,SGsBlBD,EAAiBtD,IAAOuD,IAAV,KCjBPC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACxB,+BACC,kBAAClC,EAAD,KACC,wBAAImC,QAAS,IACb,kBAAC/B,EAAD,KAAK6B,GACL,kBAAC7B,EAAD,KAAK8B,MCVKE,EAAY,kBACxB,+BACC,kBAACpC,EAAD,KACC,wBAAImC,QAAS,IACb,kBAAC/B,EAAD,cACA,kBAACA,EAAD,kB,yKCSI,IAAMiC,GAAO,SAAC,GAMH,IALjBzC,EAKgB,EALhBA,SACAL,EAIgB,EAJhBA,MACA+C,EAGgB,EAHhBA,MACAC,EAEgB,EAFhBA,WACAC,EACgB,EADhBA,WAEM9C,EAAUP,uBAAY,WACvBoD,GAAcC,GACjBA,EAAW5C,EAAU0C,EAAOC,KAE3B,CAACC,EAAYF,EAAOC,EAAY3C,IAEnC,OACC,kBAAC6C,GAAD,CAAQ/C,QAASA,EAASgD,QAASH,EAAa,aAAe,WAMjE,SAAuBhD,GACtB,YAAcoD,IAAVpD,GAAiC,OAAVA,GAA4B,IAAVA,EACrC,GACa,MAAVA,EACH,IAEAA,EAAMqD,WAXXC,CAAwB,OAAVtD,EAAiBA,EAAQgD,KAe3C,IAAMrE,GAAkBJ,IAAM,OAAQ,CACrCC,KAAMH,IAGDU,GAAQR,IAAMK,SAAS,OAAQ,UAAW,CAC/C2E,QAAS,CAAE/E,KAAMH,GACjB2E,WAAY,CAAExE,KAAMH,KAGf6E,GAASjE,YAAO4B,EAAP5B,CAAH,IACSN,GACXI,I,SCrDH,SAASyE,GAAenD,EAAoBoD,GAClD,OAAQpD,GACP,KAAK3B,EAASgF,MACb,OAAO,EAAID,EAAOvC,QAAO,SAACE,GAAD,MAAoB,kBAANA,GAAwB,IAANA,KAASuC,OACnE,KAAKjF,EAASkF,OACb,OAAOC,GAAUJ,IAAW,IAAM,EAAI,EACvC,KAAK/E,EAAS4B,UACb,OAA8D,IAAvDmD,EAAOvC,QAAO,SAACE,GAAD,MAAoB,kBAANA,KAAgBuC,OAAe,EAAI,EACvE,KAAKjF,EAASoF,SACb,OAA8D,IAAvDL,EAAOvC,QAAO,SAACE,GAAD,MAAoB,kBAANA,KAAgBuC,OAAe,EAAI,EACvE,KAAKjF,EAASqF,MACb,OAAOF,GAAUJ,IAAW,GAAK,EAAI,EACtC,KAAK/E,EAASsF,MACb,OAAOH,GAAUJ,IAAW,GAAK,EAAI,EACtC,KAAK/E,EAASuF,MACb,OAAOJ,GAAUJ,IAAW,GAAK,EAAI,GAIjC,SAASI,GAAUJ,GACzB,OAAOA,EACLvC,QAAO,SAACE,GAAD,MAAoB,kBAANA,KACrBD,KAAI,SAACC,GAAD,OAAOA,KACXc,QAAO,SAACC,EAAKT,GAAN,OAAYS,EAAMT,IAAG,GAG/B,IAAMwC,GAA4B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAa/D,SAASC,GAAoB9D,EAAoB4B,GACvD,IAAKA,EACJ,OAAO,KAGR,OAAQ5B,GACP,KAAK3B,EAASuF,MACb,OAAOjC,EAAWC,EAAKf,QAAO,SAACE,GAAD,OAAa,IAANA,MACtC,KAAK1C,EAASsF,MACb,OAAOhC,EAAWC,EAAKf,QAAO,SAACE,GAAD,OAAa,IAANA,MACtC,KAAK1C,EAASqF,MACb,OAAO/B,EAAWC,EAAKf,QAAO,SAACE,GAAD,OAAa,IAANA,MACtC,KAAK1C,EAASoF,SACb,OAUI,SAAoB7B,GAC1B,OACCA,EAAKmC,MAAK,SAAChD,GAAD,OAAa,IAANA,GAAiB,IAANA,MAC5B,CAAC,EAAG,EAAG,EAAG,GAAGiD,OAAM,SAACjD,GAAD,OAAOa,EAAKqC,SAASlD,MAbhCmD,CAAWtC,GAAQD,EAAWC,GAAQ,IAC9C,KAAKvD,EAAS4B,UACb,OAeI,SAAqB2B,GAC3B,IAAMwB,EAAS,IAAIe,IAAIvC,GACvB,GAAoB,IAAhBwB,EAAOgB,KACV,OAAO,EAGR,OAAOhD,MAAMiD,KAAKjB,GAAQY,OAAM,SAAC3C,GAChC,IAAMiD,EAAQ1C,EAAKf,QAAO,SAACE,GAAD,OAAOA,IAAMM,KAAGiC,OAC1C,OAAiB,IAAVgB,GAAyB,IAAVA,KAvBdC,CAAY3C,GAAQD,EAAWC,GAAQ,IAC/C,KAAKvD,EAASkF,OACb,OAAO5B,EAAWC,GACnB,KAAKvD,EAASgF,MACb,OAAOzB,EAAKoC,OAAM,SAACjD,GAAD,OAAOA,IAAMa,EAAK,MAAMD,EAAWC,GAAQ,GAAK,KChD9D,IAAM4C,GAAM,SAAC,GAAsD,IAApDxE,EAAmD,EAAnDA,SAAUoD,EAAyC,EAAzCA,OAAQxB,EAAiC,EAAjCA,KAAMgB,EAA2B,EAA3BA,WACvC6B,EAAQC,mBAAQ,kBAAM3E,EAAiBC,KAAW,CAACA,IACnD2E,EAAMnB,GAAUJ,GAChBpB,EAASmB,GAAenD,EAAUoD,GAClCT,EAAamB,GAAoB9D,EAAU4B,GAC3CgD,EAAQxB,EAAOyB,WAAU,SAAC9D,GAAD,OAAa,OAANA,KAEtC,OACC,kBAACX,EAAD,KACC,kBAACE,EAAD,KAAKmE,GACJrB,EAAOtC,KAAI,SAACnB,EAAO2B,GAAR,OACX,kBAAC,GAAD,CACC7B,IAAK6B,EACLoB,MAAOpB,EACP3B,MAAOA,EACPK,SAAUA,EACV2C,WACCiC,IAAUtD,EAAoB,IAAfqB,EAAmB,IAAMA,OAAcI,EAEvDH,WAAYA,OAGd,kBAACpC,EAAD,KAAKmE,GACL,kBAACnE,EAAD,KAAKwB,KCzBF8C,GAAapE,EAAWrC,GAQjB0G,GAAQ,SAAC,GAA8C,IAA5C3B,EAA2C,EAA3CA,OAAQxB,EAAmC,EAAnCA,KAAMgB,EAA6B,EAA7BA,WAC/BP,EAAQV,EACbhB,OAAOC,KAAKwC,GAAQtC,KAAI,SAACrB,GAAD,OAAS+D,GAAUJ,EAAO3D,QAE7C6C,EFOA,SAAyB0C,GAC/B,IADsD,EAClDhD,GAAU,EADwC,eAG9B6B,IAH8B,IAGtD,2BAAmD,CAClD,GAAImB,EAD8C,QAEjD,MAEDhD,KAPqD,8BAStD,OAAOA,EEhBaiD,CAAgB5C,GAC9B6C,EACL5C,EACAX,EACCjB,EAAWrC,GAAUyC,KAAI,SAACrB,GACzB,OAAO0D,GACN1D,EACA2D,EAAQ/E,EAASoB,SAKrB,OACC,oCACC,kBAACS,EAAD,KACC,kBAAC,EAAD,MACA,+BACE4E,GAAWhE,KAAI,SAACC,GAAD,OACf,kBAAC,GAAD,CACCtB,IAAKsB,EACLf,SAAUe,EACVqC,OAAQA,EAAQ/E,EAAS0C,IACzBa,KAAMA,EACNgB,WAAYA,QAIf,kBAAC,EAAD,CAAWN,YAAaA,EAAaD,MAAOA,KAE7C,kBAAC,EAAD,CAAYL,OAAQkD,M,wBCnDVC,GAAb,WAKC,WAAYnF,EAAoB0C,EAAe/C,GAAe,0BAJvDK,cAIsD,OAHtD0C,WAGsD,OAFtD/C,WAEsD,EAC5DyF,KAAKpF,SAAWA,EAChBoF,KAAK1C,MAAQA,EACb0C,KAAKzF,MAAQA,EARf,oDAWQ0F,GACN,IAAMjC,EAAsB,GAI5B,OAHAzC,OAAO2E,OAAOlC,EAAQiC,EAAMjC,QAC5BA,EAAO/E,EAAS+G,KAAKpF,WAAWoF,KAAK1C,OAAS0C,KAAKzF,MAE5C,gBAAK0F,EAAZ,CAAmBjC,eAhBrB,KCoCO,IAAMmC,GAab,WACC,IAAMC,EAASC,aAAaC,QAAQ,SAEpC,GAAe,OAAXF,EACH,IACC,OAAOG,KAAKC,MAAMJ,GACjB,UAGH,MAAO,CACNpC,OAAQyC,MAvB8BC,GAEZC,IAAMC,cAG/B,CACFX,MAAOE,GAEPU,SAAU,eAmBJ,SAASJ,KAEf,OVnE2BrG,EUmERnB,EVlEZsC,OAAOC,KAAKpB,GAAGqB,QAAO,SAACpB,GAAD,MAA2B,kBAAXD,EAAEC,OUkElBoC,QAAO,SAACC,EAAUrC,GAG9C,OAFAqC,EAAIrC,GAAO,CAAC,KAAM,KAAM,KAAM,MAEvBqC,IACL,IVvEG,IAAqBtC,E,aWiBf0G,GAAO,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMjF,EAA2C,EAA3CA,OAAQwB,EAAmC,EAAnCA,MAAO0D,EAA4B,EAA5BA,WACrCtG,EAAUP,uBAAY,kBAAM6G,EAAW1D,KAAQ,CAAC0D,EAAY1D,IAC5DhE,EAAQwC,EAAS,MAAQ,QAE/B,OAAQiF,GACP,KAAK,EACJ,OAAO,kBAAC,aAAD,iBAAeE,GAAf,CAA2B3H,MAAOA,EAAOoB,QAASA,KAC1D,KAAK,EACJ,OAAO,kBAAC,aAAD,iBAAeuG,GAAf,CAA2B3H,MAAOA,EAAOoB,QAASA,KAC1D,KAAK,EACJ,OAAO,kBAAC,eAAD,iBAAiBuG,GAAjB,CAA6B3H,MAAOA,EAAOoB,QAASA,KAC5D,KAAK,EACJ,OAAO,kBAAC,cAAD,iBAAgBuG,GAAhB,CAA4B3H,MAAOA,EAAOoB,QAASA,KAC3D,KAAK,EACJ,OAAO,kBAAC,cAAD,iBAAgBuG,GAAhB,CAA4B3H,MAAOA,EAAOoB,QAASA,KAC3D,KAAK,EACJ,OAAO,kBAAC,aAAD,iBAAeuG,GAAf,CAA2B3H,MAAOA,EAAOoB,QAASA,KAE3D,OAAO,MAGFuG,GAA4B,CACjCjC,KAAM,ICrCMkC,GAAb,iGACQjB,GACN,OAAO,gBACHA,EADJ,CAECnE,OAAQQ,IACRE,UAAMmB,EACNwD,WAAY,QANf,KCAaC,GAAb,iGACQnB,GACN,OAAO,gBACHA,EADJ,CAECzD,KAAMX,EAAOoE,EAAMnE,OAAQmE,EAAMzD,MACjC2E,WAAYlB,EAAMkB,WAAa,QALlC,KCDaE,GAAb,WAGC,WAAY/D,GAAgB,0BAF5BA,WAE2B,EAC1B0C,KAAK1C,MAAQA,EAJf,oDAOQ2C,GAA8B,IAAD,OACnC,OAAO,gBACHA,EADJ,CAECnE,OAAQmE,EAAMnE,OAAOJ,KAAI,SAAC4F,EAAGpF,GAAJ,OACxB,EAAKoB,QAAUpB,GAAKoF,EAAIA,WAX5B,KCcO,SAASC,GAAYtB,EAAkBuB,GAC7C,OAAOA,EAAO/E,OAAOwD,GAGKU,IAAMC,cAI9B,IAJI,IAMMa,GAA8B,CAC1CN,WAAY,EACZrF,OAAQQ,K,8ICpBF,IAAMoF,GAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OAC5B,kBAAC,GAAD,KACC,kBAACpI,EAAD,CAAQmE,QAAQ,UAAUhD,QAASiH,GAAnC,cAMI9E,GAAUrD,IAAOuD,IAAV,MCdA6E,GAAb,iGACQ3B,GAGN,OAFAI,aAAawB,WAAW,SAEjB,gBACH5B,EADJ,CAECjC,OAAQyC,WANX,K,yYCcO,IAAMqB,GAAO,WAAO,IAAD,EACCC,qBAAWR,GAAaE,IADzB,mBAClBxB,EADkB,KACXY,EADW,OAEWkB,qBRM9B,YAEuE,IAD7EC,EAC4E,EAD5EA,eAEA,OAAO,SAAC/B,EAAOuB,GACd,IAAMS,EAAWT,EAAO/E,OAAOwD,GAO/B,OANAI,aAAa6B,QAAQ,QAAS3B,KAAK4B,UAAUF,IAEzCT,aAAkBzB,IAAciC,GACnCA,IAGMC,GQhBPG,CAAa,IACbjC,IAJwB,mBAElBkC,EAFkB,KAENC,EAFM,OAMDC,mBAAStC,EAAMzD,MANd,mBAMlBA,EANkB,KAMZgG,EANY,KAOzBvI,qBAAU,kBAAMuI,EAAQvC,EAAMzD,QAAO,CAACyD,EAAMzD,OAE5C,IAAMiG,EAActI,uBAAY,WAC/B,IAAMuI,EAAWC,aAAY,WAC5BH,EAAQ3G,EAAOoE,EAAMnE,OAAQmE,EAAMzD,SACjC,IAEHoG,YAAW,WACVC,cAAcH,GACd7B,EAAS,IAAIO,MACX,OACD,CAACP,EAAUZ,IACRe,EAAa7G,uBAClB,SAACmD,GAAD,OAAmBuD,EAAS,IAAIQ,GAAiB/D,MACjD,CAACuD,IAEIiC,EAAU3I,uBAAY,WAC3B0G,EAAS,IAAIK,MACX,CAACL,IACErD,EAAarD,uBAClB,SAACS,EAAoB0C,EAAe/C,GACnC+H,EAAc,IAAIvC,GAAWnF,EAAU0C,EAAO/C,IAC9CuI,MAED,CAACR,EAAeQ,IAEXnB,EAAaxH,uBAAY,WAC9BmI,EAAc,IAAIV,IAClBf,EAAS,IAAIK,MACX,CAACoB,EAAezB,IAEnB,OACC,kBAACkC,GAAD,KACC,kBAAC,GAAD,CACCvG,KAAMyD,EAAMzD,KACZwB,OAAQqE,EAAWrE,OACnBR,WAAYA,IAEb,4BACuB,IAArByC,EAAMkB,WACJ,kBADF,gBAEWlB,EAAMkB,WAFjB,UAIF,kBAAC6B,GAAD,YACExG,QADF,IACEA,OADF,EACEA,EAAMd,KAAI,SAACC,EAAGO,GAAJ,OACV,kBAAC,GAAD,CACC7B,IAAK6B,EACL6E,KAAMpF,EACN2B,MAAOpB,EACP8E,WAAYA,EACZlF,OAAQmE,EAAMnE,OAAOI,SAKxB,kBAAC+G,GAAD,KACC,kBAAC1J,EAAD,CACCmE,QAA8B,IAArBuC,EAAMkB,WAAmB,WAAa,UAC/CzG,QAAS+H,EACTrJ,SAA+B,IAArB6G,EAAMkB,YAHjB,SASD,kBAAC,GAAD,CAAeQ,WAAYA,MAKxBoB,GAAYvJ,IAAOuD,IAAV,MAMTiG,GAAgBxJ,IAAOuD,IAAV,MAMbkG,GAAkBzJ,IAAOuD,IAAV,M,qWCnGd,IAAMmG,GAAa,kBACzB,kBAACC,GAAD,KACC,kBAACC,GAAD,KACC,kBAACC,GAAD,KACC,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAED,kBAACD,GAAD,KACC,kBAAC,IAAD,CAAMC,GAAG,UAAT,aASEH,GAAM3J,IAAO+J,IAAV,KAEEvK,GAKLoK,GAAQ5J,YAAOE,EAAPF,CAAH,MAKL6J,GAAQ7J,YAAOI,EAAPJ,CAAH,M,yQC7BX,IAAMoD,GAAS,CACd,CAAC3D,EAASuF,MAAO,aAAc,GAC/B,CAACvF,EAASsF,MAAO,aAAc,GAC/B,CAACtF,EAASqF,MAAO,aAAc,GAC/B,CAACrF,EAASoF,SAAU,gBAAiB,GACrC,CAACpF,EAAS4B,UAAW,iBAAkB,GACvC,CAAC5B,EAASkF,OAAQ,cAAe,GACjC,CAAClF,EAASgF,MAAO,aAAc,IAG1Bf,GAAc,CACnB,CAAC,EAAG,KAAM,GACV,CAAC,IAAK,KAAM,GACZ,CAAC,IAAK,IAAK,GACX,CAAC,IAAK,IAAK,GACX,CAAC,IAAK,IAAK,GACX,CAAC,IAAK,IAAK,GACX,CAAC,IAAK,IAAK,GACX,CAAC,IAAK,IAAK,GACX,CAAC,IAAK,WAAY,IAGNsG,GAAQ,WACpB,OACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,uDACA,kBAAC9J,EAAD,KACEkD,GAAOlB,KAAI,mCAAEd,EAAF,KAAY6I,EAAZ,KAAyB7G,EAAzB,YACX,kBAAChD,EAAD,CAAIS,IAAKO,GACR,8BACED,EAAiBC,GADnB,MAC6C6I,GAE7C,gCAAS7G,EAAT,gBAIH,6DACA,kBAAClD,EAAD,KACEwD,GAAYxB,KAAI,mCAAEgI,EAAF,KAASC,EAAT,KAAiB/G,EAAjB,YAChB,kBAAChD,EAAD,CAAIS,IAAKuC,GACR,8BACE8G,EADF,MACYC,GAEZ,gCAAS/G,EAAT,mBASDmG,GAAYvJ,IAAOuD,IAAV,MAOTF,GAAUrD,IAAOuD,IAAV,M,gsBCTE6G,OA1Cf,WAAgB,IAAD,IACmBrB,mBAAQ,UACxClC,aAAaC,QAAQ,gBADmB,QACP,QAFpB,mBACPxH,EADO,KACA+K,EADA,KAad,OARiB1J,uBAChB,SAACrB,GACAuH,aAAa6B,QAAQ,QAASpJ,GAC9B+K,EAAgB/K,KAEjB,CAAC+K,IAID,kBAAC,IAAD,CAAe/K,MAAO,CAAEgL,KAAMhL,IAC7B,kBAACiL,GAAD,MACA,kBAAC,IAAD,KACC,kBAACC,GAAD,KACC,kBAACC,GAAD,KACC,kBAACC,GAAD,cACA,kBAAC,GAAD,OAGD,iCACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAK,SACX,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,UACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,KACX,kBAAC,GAAD,aAYFC,GAAatL,IAAM,OAAQ,CAChCC,KAAMsL,YAAF,KACiBzL,EACXA,KAILoL,GAAOxK,IAAO8K,KAAV,KACPF,IAIGL,GAAcQ,YAAH,KAObH,IAIEH,GAASzK,IAAOgL,OAAV,MAMNN,GAAK1K,IAAOiL,GAAV,MC3EYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,GAAD,OAEDC,SAASC,eAAe,SDkInB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.09fa486e.chunk.js","sourcesContent":["import theme from 'styled-theming';\n\nexport const darkColors = {\n\tborder: '#CCC',\n\tcolor: '#CCC',\n\tbackgroundColor: '#000',\n\tsecondaryBackgroundColor: '#222',\n\tsuggestion: '#09F',\n\tnavColor: '#09C',\n};\n\nexport const borderColor = theme('mode', {\n\tdark: darkColors.border,\n});\n\nexport const navColor = theme('mode', {\n\tdark: darkColors.navColor,\n});\n","import styled from 'styled-components';\nimport theme from 'styled-theming';\nimport { darkColors } from './colors';\n\nconst backgroundColor = theme.variants('mode', 'variant', {\n\tdisabled: { dark: 'darkgray' },\n\tprimary: { dark: 'darkblue' },\n});\nconst color = theme.variants('mode', 'variant', {\n\tdisabled: { dark: darkColors.color },\n\tprimary: { dark: darkColors.color },\n});\n\nexport const Button = styled.button`\n\tbackground-color: ${backgroundColor};\n\tcolor: ${color};\n\tpadding: 10px;\n\tmargin: 6px;\n\tborder: none;\n\tborder-radius: 6px;\n\tfont-size: 1.2em;\n`;\n\nexport const Ul = styled.ul`\n\tdisplay: inline;\n\tlist-style-type: none;\n\tpadding: 0;\n\tmargin: 0;\n`;\n\nexport const Li = styled.li`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\n","export enum Category {\n\tFours,\n\tFives,\n\tSixes,\n\tStraight,\n\tFullHouse,\n\tChance,\n\tBalut,\n}\n\nexport function categoryToString(category: Category): string {\n\tif (category === Category.FullHouse) {\n\t\treturn 'Full house';\n\t}\n\treturn Category[category];\n}\n","import React, { useCallback, useEffect, useRef } from 'react';\n// import { connection } from '../../connection';\nimport { Button } from '../../styles/elements';\n\nexport const Chat = () => {\n\tconst username = 'Oliver';\n\tconst sessionInputRef = useRef<HTMLInputElement>(null);\n\tuseEffect(() => {\n\t\t// connection.on('messageReceived', (username, message) => {\n\t\t// \tconsole.log(`${username}: ${message}`);\n\t\t// });\n\t\t// connection.on('joinedSession', (session, username) => {\n\t\t// \tconsole.log(`${username} joined ${session}`);\n\t\t// });\n\t}, []);\n\n\tconst onKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.key === 'Enter') {\n\t\t\t// connection.invoke(\n\t\t\t// \t'sendGroupMessage',\n\t\t\t// \tsessionInputRef.current?.value,\n\t\t\t// \tusername,\n\t\t\t// \te.currentTarget.value,\n\t\t\t// );\n\t\t\te.currentTarget.value = '';\n\t\t}\n\t}, []);\n\n\tconst joinSession = useCallback(() => {\n\t\t// connection.invoke('join', sessionInputRef.current?.value, username);\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<input ref={sessionInputRef} />\n\t\t\t\t<Button onClick={joinSession}>Join session</Button>\n\t\t\t</div>\n\t\t\t<h3>Send message</h3>\n\t\t\t<input onKeyDown={onKeyDown} />\n\t\t</div>\n\t);\n};\n","import styled from 'styled-components';\nimport { borderColor } from './colors';\n\nexport const maxWidth = '760px';\n\nexport const Table = styled.table`\n\tborder-collapse: collapse;\n\twidth: 100%;\n\tmax-width: ${maxWidth};\n`;\n\nexport const Tr = styled.tr``;\nexport const Th = styled.th`\n\ttext-align: left;\n\tborder: 1px solid ${borderColor};\n\tpadding: 4px;\n`;\nexport const Td = styled.td`\n\tborder: 1px solid ${borderColor};\n\tpadding: 4px;\n\ttext-align: center;\n\tmin-width: 20px;\n`;\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function enumStrings(e: any): string[] {\n\treturn Object.keys(e).filter((key) => typeof e[key] === 'number');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function enumValues(e: any): number[] {\n\treturn Object.keys(e)\n\t\t.filter((key) => typeof e[key] !== 'number')\n\t\t.map((x) => parseInt(x));\n}\n","import { RollLock, Roll } from './GameState';\n\nexport function randomDice(): number {\n\treturn Math.floor(Math.random() * 6) + 1;\n}\n\nexport function doRoll(locked: RollLock, current?: Roll): Roll {\n\treturn (current ?? [...Array(5)]).map((v, i) =>\n\t\tlocked[i] ? v : randomDice(),\n\t) as Roll;\n}\n\nexport function resetLocked(): RollLock {\n\treturn [...Array(5)].map(() => false) as RollLock;\n}\n\nexport function sumNumbers(roll: number[]) {\n\treturn roll.reduce((acc, v) => acc + v, 0);\n}\n","import React from 'react';\nimport { maxWidth } from '../../styles/table';\nimport styled from 'styled-components';\n\ninterface FinalScoreProps {\n\tpoints: number;\n}\n\nexport const FinalScore = ({ points }: FinalScoreProps) => (\n\t<Wrapper>\n\t\t<ScoreContainer>\n\t\t\t<span>Final score: </span>\n\t\t\t<span>{points}</span>\n\t\t</ScoreContainer>\n\t</Wrapper>\n);\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: flex-end;\n\tmargin: 6px 0;\n\tmax-width: ${maxWidth};\n`;\n\nconst ScoreContainer = styled.div`\n\tfont-size: 1.4em;\n\tborder-bottom: 1px solid white;\n`;\n","import React from 'react';\nimport { Tr, Td } from '../../styles/table';\n\ninterface FooterRowProps {\n\ttotal: number;\n\textraPoints: number;\n}\n\nexport const FooterRow = ({ total, extraPoints }: FooterRowProps) => (\n\t<tfoot>\n\t\t<Tr>\n\t\t\t<td colSpan={5} />\n\t\t\t<Td>{total}</Td>\n\t\t\t<Td>{extraPoints}</Td>\n\t\t</Tr>\n\t</tfoot>\n);\n","import React from 'react';\nimport { Td, Tr } from '../../styles/table';\n\nexport const HeaderRow = () => (\n\t<thead>\n\t\t<Tr>\n\t\t\t<td colSpan={5}></td>\n\t\t\t<Td>Total</Td>\n\t\t\t<Td>Points</Td>\n\t\t</Tr>\n\t</thead>\n);\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport theme from 'styled-theming';\nimport { Category } from '../../Category';\nimport { darkColors } from '../../styles/colors';\nimport { Td } from '../../styles/table';\nimport { WriteValue } from '../Game/state/GameState';\nimport { Value } from './state/BalutState';\n\ninterface CellProps {\n\tcategory: Category;\n\tvalue: Value;\n\tsuggestion?: Value;\n\tindex: number;\n\twriteValue?: WriteValue;\n}\n\nexport const Cell = ({\n\tcategory,\n\tvalue,\n\tindex,\n\tsuggestion,\n\twriteValue,\n}: CellProps) => {\n\tconst onClick = useCallback(() => {\n\t\tif (suggestion && writeValue) {\n\t\t\twriteValue(category, index, suggestion);\n\t\t}\n\t}, [writeValue, index, suggestion, category]);\n\n\treturn (\n\t\t<TdCell onClick={onClick} variant={suggestion ? 'suggestion' : 'default'}>\n\t\t\t{valueToString(value !== null ? value : suggestion)}\n\t\t</TdCell>\n\t);\n};\n\nfunction valueToString(value?: Value): string {\n\tif (value === undefined || value === null || value === 0) {\n\t\treturn '';\n\t} else if (value === 'X') {\n\t\treturn 'X';\n\t} else {\n\t\treturn value.toString();\n\t}\n}\n\nconst backgroundColor = theme('mode', {\n\tdark: darkColors.secondaryBackgroundColor,\n});\n\nconst color = theme.variants('mode', 'variant', {\n\tdefault: { dark: darkColors.color },\n\tsuggestion: { dark: darkColors.suggestion },\n});\n\nconst TdCell = styled(Td)`\n\tbackground-color: ${backgroundColor};\n\tcolor: ${color};\n\tuser-select: none;\n\tpadding: 0 4px;\n\theight: 2em;\n`;\n","import { Category } from '../../Category';\nimport { Roll } from '../Game/state/GameState';\nimport { sumNumbers } from '../Game/state/gameUtils';\nimport { RowState, Value } from './state/BalutState';\n\nexport function categoryPoints(category: Category, values: RowState): number {\n\tswitch (category) {\n\t\tcase Category.Balut:\n\t\t\treturn 2 * values.filter((x) => typeof x === 'number' && x !== 0).length;\n\t\tcase Category.Chance:\n\t\t\treturn sumValues(values) >= 100 ? 2 : 0;\n\t\tcase Category.FullHouse:\n\t\t\treturn values.filter((x) => typeof x === 'number').length === 4 ? 3 : 0;\n\t\tcase Category.Straight:\n\t\t\treturn values.filter((x) => typeof x === 'number').length === 4 ? 4 : 0;\n\t\tcase Category.Sixes:\n\t\t\treturn sumValues(values) >= 78 ? 2 : 0;\n\t\tcase Category.Fives:\n\t\t\treturn sumValues(values) >= 65 ? 2 : 0;\n\t\tcase Category.Fours:\n\t\t\treturn sumValues(values) >= 52 ? 2 : 0;\n\t}\n}\n\nexport function sumValues(values: RowState): number {\n\treturn values\n\t\t.filter((x) => typeof x === 'number')\n\t\t.map((x) => x as number)\n\t\t.reduce((acc, v) => acc + v, 0);\n}\n\nconst finalPointScoreThresholds = [300, 350, 400, 450, 500, 550, 600, 650];\nexport function extraPointScore(score: number): number {\n\tlet points = -2;\n\n\tfor (const threshold of finalPointScoreThresholds) {\n\t\tif (score < threshold) {\n\t\t\tbreak;\n\t\t}\n\t\tpoints++;\n\t}\n\treturn points;\n}\n\nexport function calculateSuggestion(category: Category, roll?: Roll): Value {\n\tif (!roll) {\n\t\treturn null;\n\t}\n\n\tswitch (category) {\n\t\tcase Category.Fours:\n\t\t\treturn sumNumbers(roll.filter((x) => x === 4));\n\t\tcase Category.Fives:\n\t\t\treturn sumNumbers(roll.filter((x) => x === 5));\n\t\tcase Category.Sixes:\n\t\t\treturn sumNumbers(roll.filter((x) => x === 6));\n\t\tcase Category.Straight:\n\t\t\treturn isStraight(roll) ? sumNumbers(roll) : 'X';\n\t\tcase Category.FullHouse:\n\t\t\treturn isFullHouse(roll) ? sumNumbers(roll) : 'X';\n\t\tcase Category.Chance:\n\t\t\treturn sumNumbers(roll);\n\t\tcase Category.Balut:\n\t\t\treturn roll.every((x) => x === roll[0]) ? sumNumbers(roll) + 20 : 'X';\n\t}\n}\n\nexport function isStraight(roll: Roll): boolean {\n\treturn (\n\t\troll.some((x) => x === 1 || x === 6) &&\n\t\t[2, 3, 4, 5].every((x) => roll.includes(x))\n\t);\n}\n\nexport function isFullHouse(roll: Roll): boolean {\n\tconst values = new Set(roll);\n\tif (values.size !== 2) {\n\t\treturn false;\n\t}\n\n\treturn Array.from(values).every((v) => {\n\t\tconst count = roll.filter((x) => x === v).length;\n\t\treturn count === 3 || count === 2;\n\t});\n}\n","import React, { useMemo } from 'react';\nimport { Category, categoryToString } from '../../Category';\nimport { Td, Th, Tr } from '../../styles/table';\nimport { Roll, WriteValue } from '../Game/state/GameState';\nimport { Cell } from './Cell';\nimport { calculateSuggestion, categoryPoints, sumValues } from './rules';\nimport { RowState } from './state/BalutState';\n\ninterface RowProps {\n\tcategory: Category;\n\tvalues: RowState;\n\troll?: Roll;\n\twriteValue?: WriteValue;\n}\n\nexport const Row = ({ category, values, roll, writeValue }: RowProps) => {\n\tconst title = useMemo(() => categoryToString(category), [category]);\n\tconst sum = sumValues(values);\n\tconst points = categoryPoints(category, values);\n\tconst suggestion = calculateSuggestion(category, roll);\n\tconst first = values.findIndex((x) => x === null);\n\n\treturn (\n\t\t<Tr>\n\t\t\t<Th>{title}</Th>\n\t\t\t{values.map((value, i) => (\n\t\t\t\t<Cell\n\t\t\t\t\tkey={i}\n\t\t\t\t\tindex={i}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tcategory={category}\n\t\t\t\t\tsuggestion={\n\t\t\t\t\t\tfirst === i ? (suggestion === 0 ? 'X' : suggestion) : undefined\n\t\t\t\t\t}\n\t\t\t\t\twriteValue={writeValue}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<Td>{sum}</Td>\n\t\t\t<Td>{points}</Td>\n\t\t</Tr>\n\t);\n};\n","import React from 'react';\nimport { Category } from '../../Category';\nimport { Table } from '../../styles/table';\nimport { enumValues } from '../../utils/enums';\nimport { Roll, WriteValue } from '../Game/state/GameState';\nimport { sumNumbers } from '../Game/state/gameUtils';\nimport { FinalScore } from './FinalScore';\nimport { FooterRow } from './FooterRow';\nimport { HeaderRow } from './HeaderRow';\nimport { Row } from './Row';\nimport { categoryPoints, extraPointScore, sumValues } from './rules';\nimport { BalutValues } from './state/BalutState';\n\nconst categories = enumValues(Category);\n\ninterface BoardProps {\n\tvalues: BalutValues;\n\troll?: Roll;\n\twriteValue?: WriteValue;\n}\n\nexport const Board = ({ values, roll, writeValue }: BoardProps) => {\n\tconst total = sumNumbers(\n\t\tObject.keys(values).map((key) => sumValues(values[key])),\n\t);\n\tconst extraPoints = extraPointScore(total);\n\tconst totalPoints =\n\t\textraPoints +\n\t\tsumNumbers(\n\t\t\tenumValues(Category).map((key) => {\n\t\t\t\treturn categoryPoints(\n\t\t\t\t\tkey,\n\t\t\t\t\tvalues[(Category[key] as unknown) as number],\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<HeaderRow />\n\t\t\t\t<tbody>\n\t\t\t\t\t{categories.map((x) => (\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\tkey={x}\n\t\t\t\t\t\t\tcategory={x}\n\t\t\t\t\t\t\tvalues={values[(Category[x] as unknown) as number]}\n\t\t\t\t\t\t\troll={roll}\n\t\t\t\t\t\t\twriteValue={writeValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t\t<FooterRow extraPoints={extraPoints} total={total} />\n\t\t\t</Table>\n\t\t\t<FinalScore points={totalPoints} />\n\t\t</>\n\t);\n};\n","import { BalutAction, BalutState, Value, BalutValues } from '../BalutState';\nimport { Category } from '../../../../Category';\n\nexport class StoreValue implements BalutAction {\n\tpublic category: Category;\n\tpublic index: number;\n\tpublic value: Value;\n\n\tconstructor(category: Category, index: number, value: Value) {\n\t\tthis.category = category;\n\t\tthis.index = index;\n\t\tthis.value = value;\n\t}\n\n\treduce(state: BalutState): BalutState {\n\t\tconst values: BalutValues = {};\n\t\tObject.assign(values, state.values);\n\t\tvalues[Category[this.category]][this.index] = this.value;\n\n\t\treturn { ...state, values };\n\t}\n}\n","import React from 'react';\nimport { enumStrings } from '../../../utils/enums';\nimport { Category } from '../../../Category';\nimport { StoreValue } from './actions/StoreValue';\n\n// Type to represent a entry on the Balut board.\n// 'null' = cell unused\n// 'X' = cell scratched\n// else the value entered\nexport type Value = number | 'X' | null;\nexport type RowState = [Value, Value, Value, Value];\n\nexport interface BalutState {\n\tvalues: BalutValues;\n}\n\nexport interface BalutAction {\n\treduce(state: BalutState): BalutState;\n}\n\ninterface BalutReducerArgs {\n\tonValueWritten?: () => void;\n}\n\nexport function balutReducer({\n\tonValueWritten,\n}: BalutReducerArgs): (state: BalutState, action: BalutAction) => BalutState {\n\treturn (state, action) => {\n\t\tconst newState = action.reduce(state);\n\t\tlocalStorage.setItem('state', JSON.stringify(newState));\n\n\t\tif (action instanceof StoreValue && onValueWritten) {\n\t\t\tonValueWritten();\n\t\t}\n\n\t\treturn newState;\n\t};\n}\n\nexport const balutInitial: BalutState = initState();\n\nexport const BalutContext = React.createContext<{\n\tstate: BalutState;\n\tdispatch: React.Dispatch<BalutAction>;\n}>({\n\tstate: balutInitial,\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tdispatch: () => {},\n});\n\nexport type BalutValues = { [key: string]: RowState };\n\nfunction initState(): BalutState {\n\tconst stored = localStorage.getItem('state');\n\n\tif (stored !== null) {\n\t\ttry {\n\t\t\treturn JSON.parse(stored) as BalutState;\n\t\t} catch {}\n\t}\n\n\treturn {\n\t\tvalues: initValues(),\n\t};\n}\n\nexport function initValues() {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn enumStrings(Category).reduce((acc: any, key) => {\n\t\tacc[key] = [null, null, null, null];\n\n\t\treturn acc;\n\t}, {});\n}\n","import React, { useCallback } from 'react';\nimport {\n\tFaDiceFive,\n\tFaDiceFour,\n\tFaDiceOne,\n\tFaDiceSix,\n\tFaDiceThree,\n\tFaDiceTwo,\n} from 'react-icons/fa/index';\nimport { IconBaseProps } from 'react-icons/lib';\n\ninterface DiceProps {\n\tdice: number;\n\tlocked: boolean;\n\tindex: number;\n\ttoggleLock: (index: number) => void;\n}\n\nexport const Dice = ({ dice, locked, index, toggleLock }: DiceProps) => {\n\tconst onClick = useCallback(() => toggleLock(index), [toggleLock, index]);\n\tconst color = locked ? 'red' : 'white';\n\n\tswitch (dice) {\n\t\tcase 1:\n\t\t\treturn <FaDiceOne {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 2:\n\t\t\treturn <FaDiceTwo {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 3:\n\t\t\treturn <FaDiceThree {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 4:\n\t\t\treturn <FaDiceFour {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 5:\n\t\t\treturn <FaDiceFive {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 6:\n\t\t\treturn <FaDiceSix {...diceStyles} color={color} onClick={onClick} />;\n\t}\n\treturn null;\n};\n\nconst diceStyles: IconBaseProps = {\n\tsize: 60,\n};\n","import { GameAction, GameState } from '../GameState';\nimport { resetLocked } from '../gameUtils';\n\nexport class ResetRollAction implements GameAction {\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocked: resetLocked(),\n\t\t\troll: undefined,\n\t\t\trollNumber: 0,\n\t\t};\n\t}\n}\n","import { GameAction, GameState } from '../GameState';\nimport { doRoll } from '../gameUtils';\n\nexport class RollAction implements GameAction {\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\troll: doRoll(state.locked, state.roll),\n\t\t\trollNumber: state.rollNumber + 1,\n\t\t};\n\t}\n}\n","import { GameAction, GameState, RollLock } from '../GameState';\n\nexport class ToggleDiceAction implements GameAction {\n\tindex: number;\n\n\tconstructor(index: number) {\n\t\tthis.index = index;\n\t}\n\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocked: state.locked.map((b, i) =>\n\t\t\t\tthis.index === i ? !b : b,\n\t\t\t) as RollLock,\n\t\t};\n\t}\n}\n","import React from 'react';\nimport { resetLocked } from './gameUtils';\nimport { Category } from '../../../Category';\nimport { Value } from '../../Board/state/BalutState';\n\nexport interface GameState {\n\troll?: Roll;\n\tlocked: RollLock;\n\trollNumber: number;\n\tname?: string;\n}\n\nexport interface GameAction {\n\treduce(state: GameState): GameState;\n}\n\nexport function gameReducer(state: GameState, action: GameAction): GameState {\n\treturn action.reduce(state);\n}\n\nexport const GameContext = React.createContext<{\n\tstate: GameState;\n\tdispatch: React.Dispatch<GameAction>;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}>({} as any);\n\nexport const initialGameState: GameState = {\n\trollNumber: 0,\n\tlocked: resetLocked(),\n};\n\nexport type Roll = [number, number, number, number, number];\nexport type RollLock = [boolean, boolean, boolean, boolean, boolean];\n\nexport type WriteValue = (\n\tcategory: Category,\n\tindex: number,\n\tvalue: Value,\n) => void;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from '../../styles/elements';\n\ninterface BoardControlsProps {\n\tclearBoard?: () => void;\n}\n\nexport const BoardControls = ({ clearBoard }: BoardControlsProps) => (\n\t<Wrapper>\n\t\t<Button variant=\"primary\" onClick={clearBoard}>\n\t\t\tNew game\n\t\t</Button>\n\t</Wrapper>\n);\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: right;\n\tmargin: 0 -6px -6px;\n`;\n","import { BalutAction, BalutState, initValues } from '../BalutState';\n\nexport class ClearBoard implements BalutAction {\n\treduce(state: BalutState): BalutState {\n\t\tlocalStorage.removeItem('state');\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tvalues: initValues(),\n\t\t};\n\t}\n}\n","import React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport styled from 'styled-components';\nimport { Category } from '../../Category';\nimport { Button } from '../../styles/elements';\nimport { Board } from '../Board/Board';\nimport { StoreValue } from '../Board/state/actions/StoreValue';\nimport { balutInitial, balutReducer, Value } from '../Board/state/BalutState';\nimport { Dice } from './Dice';\nimport { ResetRollAction } from './state/actions/ResetRollAction';\nimport { RollAction } from './state/actions/RollAction';\nimport { ToggleDiceAction } from './state/actions/ToggleDiceAction';\nimport { gameReducer, initialGameState } from './state/GameState';\nimport { doRoll } from './state/gameUtils';\nimport { BoardControls } from '../Board/BoardControls';\nimport { ClearBoard } from '../Board/state/actions/ClearBoard';\n\nexport const Game = () => {\n\tconst [state, dispatch] = useReducer(gameReducer, initialGameState);\n\tconst [balutState, balutDispatch] = useReducer(\n\t\tbalutReducer({}),\n\t\tbalutInitial,\n\t);\n\tconst [roll, setRoll] = useState(state.roll);\n\tuseEffect(() => setRoll(state.roll), [state.roll]);\n\n\tconst executeRoll = useCallback(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetRoll(doRoll(state.locked, state.roll));\n\t\t}, 50);\n\n\t\tsetTimeout(() => {\n\t\t\tclearInterval(interval);\n\t\t\tdispatch(new RollAction());\n\t\t}, 1000);\n\t}, [dispatch, state]);\n\tconst toggleLock = useCallback(\n\t\t(index: number) => dispatch(new ToggleDiceAction(index)),\n\t\t[dispatch],\n\t);\n\tconst newRoll = useCallback(() => {\n\t\tdispatch(new ResetRollAction());\n\t}, [dispatch]);\n\tconst writeValue = useCallback(\n\t\t(category: Category, index: number, value: Value) => {\n\t\t\tbalutDispatch(new StoreValue(category, index, value));\n\t\t\tnewRoll();\n\t\t},\n\t\t[balutDispatch, newRoll],\n\t);\n\tconst clearBoard = useCallback(() => {\n\t\tbalutDispatch(new ClearBoard());\n\t\tdispatch(new ResetRollAction());\n\t}, [balutDispatch, dispatch]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Board\n\t\t\t\troll={state.roll}\n\t\t\t\tvalues={balutState.values}\n\t\t\t\twriteValue={writeValue}\n\t\t\t/>\n\t\t\t<h3>\n\t\t\t\t{state.rollNumber === 0\n\t\t\t\t\t? 'Roll your dice!'\n\t\t\t\t\t: `Roll #${state.rollNumber} of 3`}\n\t\t\t</h3>\n\t\t\t<DiceContainer>\n\t\t\t\t{roll?.map((x, i) => (\n\t\t\t\t\t<Dice\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tdice={x}\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\ttoggleLock={toggleLock}\n\t\t\t\t\t\tlocked={state.locked[i]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</DiceContainer>\n\n\t\t\t<ButtonContainer>\n\t\t\t\t<Button\n\t\t\t\t\tvariant={state.rollNumber === 3 ? 'disabled' : 'primary'}\n\t\t\t\t\tonClick={executeRoll}\n\t\t\t\t\tdisabled={state.rollNumber === 3}\n\t\t\t\t>\n\t\t\t\t\tRoll\n\t\t\t\t</Button>\n\t\t\t</ButtonContainer>\n\n\t\t\t<BoardControls clearBoard={clearBoard} />\n\t\t</Container>\n\t);\n};\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst DiceContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n`;\n\nconst ButtonContainer = styled.div`\n\tdisplay: flex;\n\tmargin: 6px -6px;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Li, Ul } from '../styles/elements';\nimport { navColor } from '../styles/colors';\n\nexport const Navigation = () => (\n\t<Nav>\n\t\t<NavUl>\n\t\t\t<NavLi>\n\t\t\t\t<Link to=\"/\">Game</Link>\n\t\t\t</NavLi>\n\t\t\t<NavLi>\n\t\t\t\t<Link to=\"/rules\">Rules</Link>\n\t\t\t</NavLi>\n\t\t\t{/* <NavLi>\n\t\t\t\t<Link to=\"/chat\">Chat</Link>\n\t\t\t</NavLi> */}\n\t\t</NavUl>\n\t</Nav>\n);\n\nconst Nav = styled.nav`\n\ta {\n\t\tcolor: ${navColor};\n\t\ttext-decoration: none;\n\t}\n`;\n\nconst NavUl = styled(Ul)`\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst NavLi = styled(Li)`\n\tmargin: 0 8px;\n\tfont-size: 1.2em;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Category, categoryToString } from '../Category';\nimport { Li, Ul } from '../styles/elements';\n\nconst points = [\n\t[Category.Fours, '52 or more', 2],\n\t[Category.Fives, '65 or more', 2],\n\t[Category.Sixes, '78 or more', 2],\n\t[Category.Straight, 'All straights', 4],\n\t[Category.FullHouse, 'All full house', 3],\n\t[Category.Chance, '100 or more', 2],\n\t[Category.Balut, 'Each balut', 2],\n];\n\nconst extraPoints = [\n\t[0, 299, -2],\n\t[300, 349, -1],\n\t[350, 399, 0],\n\t[400, 449, 1],\n\t[450, 499, 2],\n\t[500, 549, 3],\n\t[549, 599, 4],\n\t[600, 649, 5],\n\t[650, 'or above', 6],\n];\n\nexport const Rules = () => {\n\treturn (\n\t\t<Container>\n\t\t\t<Wrapper>\n\t\t\t\t<h3>How to calculate points</h3>\n\t\t\t\t<Ul>\n\t\t\t\t\t{points.map(([category, description, points]) => (\n\t\t\t\t\t\t<Li key={category}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{categoryToString(category as Category)} - {description}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<strong>{points} points</strong>\n\t\t\t\t\t\t</Li>\n\t\t\t\t\t))}\n\t\t\t\t</Ul>\n\t\t\t\t<h4>Extra points from total score</h4>\n\t\t\t\t<Ul>\n\t\t\t\t\t{extraPoints.map(([lower, higher, points]) => (\n\t\t\t\t\t\t<Li key={points}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{lower} - {higher}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<strong>{points} points</strong>\n\t\t\t\t\t\t</Li>\n\t\t\t\t\t))}\n\t\t\t\t</Ul>\n\t\t\t</Wrapper>\n\t\t</Container>\n\t);\n};\n\nconst Container = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n`;\n\nconst Wrapper = styled.div`\n\twidth: 100%;\n\tmax-width: 350px;\n`;\n","import React, { useCallback, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled, {\n\tcreateGlobalStyle,\n\tcss,\n\tThemeProvider,\n} from 'styled-components';\nimport theme from 'styled-theming';\nimport { Chat } from './components/Chat/Chat';\nimport { Game } from './components/Game/Game';\nimport { Navigation } from './components/Navigation';\nimport { Rules } from './components/Rules';\nimport { darkColors } from './styles/colors';\n\nfunction App() {\n\tconst [theme, setCurrentTheme] = useState<string>(\n\t\tlocalStorage.getItem('theme') ?? 'dark',\n\t);\n\n\tconst setTheme = useCallback(\n\t\t(theme: string) => {\n\t\t\tlocalStorage.setItem('theme', theme);\n\t\t\tsetCurrentTheme(theme);\n\t\t},\n\t\t[setCurrentTheme],\n\t);\n\n\treturn (\n\t\t<ThemeProvider theme={{ mode: theme }}>\n\t\t\t<GlobalStyle />\n\t\t\t<Router>\n\t\t\t\t<Main>\n\t\t\t\t\t<Header>\n\t\t\t\t\t\t<H1>Balut</H1>\n\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t</Header>\n\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/chat\">\n\t\t\t\t\t\t\t\t<Chat />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/rules\">\n\t\t\t\t\t\t\t\t<Rules />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t<Game />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</section>\n\t\t\t\t</Main>\n\t\t\t</Router>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n\nconst mainStyles = theme('mode', {\n\tdark: css`\n\t\tbackground-color: ${darkColors.backgroundColor};\n\t\tcolor: ${darkColors.color};\n\t`,\n});\n\nconst Main = styled.main`\n\t${mainStyles}\n\tpadding: 12px;\n`;\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tfont-family: Futura;\n\t\t${mainStyles}\n\t}\n`;\n\nconst Header = styled.header`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n`;\n\nconst H1 = styled.h1`\n\tmargin: 0;\n\tfont-size: 3em;\n\ttext-decoration: none !important;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}