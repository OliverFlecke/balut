{"version":3,"sources":["styles/elements.tsx","Category.ts","styles/table.tsx","utils/enums.ts","components/Game/state/gameUtils.ts","components/Board/FinalScore.tsx","components/Board/FooterRow.tsx","components/Board/HeaderRow.tsx","components/Board/Cell.tsx","components/Board/rules.ts","components/Board/Row.tsx","components/Board/Board.tsx","components/Board/BoardControls.tsx","components/Game/Dice.tsx","components/Game/state/GameState.ts","components/Game/state/actions/ClearBoard.ts","components/Game/state/actions/ResetRollAction.ts","components/Game/state/actions/RollAction.ts","components/Game/state/actions/StoreValue.ts","components/Game/state/actions/ToggleDiceAction.ts","components/Game/Game.tsx","state/AppActions.ts","components/MultiplayerGame.tsx","components/Navigation.tsx","components/Rules.tsx","components/Modal.tsx","components/StartMultiplayerModal.tsx","connection.ts","state/AppState.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Button","props","className","buttonColor","variant","Category","Ul","children","Li","H3","H4","Form","Input","Line","categoryToString","category","FullHouse","Table","Tr","Th","Td","style","minWidth","enumValues","e","Object","keys","filter","key","map","x","parseInt","doRoll","locked","current","Array","v","i","Math","floor","random","resetLocked","sumNumbers","roll","reduce","acc","FinalScore","points","FooterRow","total","extraPoints","colSpan","HeaderRow","Cell","value","index","suggestion","writeValue","onClick","useCallback","valueToString","undefined","toString","TdCell","categoryPoints","values","Balut","length","Chance","sumValues","Straight","Sixes","Fives","Fours","finalPointScoreThresholds","calculateSuggestion","some","every","includes","isStraight","Set","size","from","count","isFullHouse","Row","title","useMemo","sum","first","findIndex","categories","Board","score","extraPointScore","totalPoints","BoardControls","clearBoard","Dice","dice","toggleLock","color","diceStyles","gameReducer","state","action","newState","localStorage","setItem","JSON","stringify","initBalutValues","ClearBoard","removeItem","ResetRollAction","rollNumber","RollAction","StoreValue","this","assign","ToggleDiceAction","b","Game","onTurnFinished","useReducer","stored","getItem","parse","initialGameState","dispatch","useState","setRoll","useEffect","executeRoll","interval","setInterval","setTimeout","clearInterval","newRoll","disabled","SetConnectionAction","connection","SetSessionAction","session","SetNameAction","name","UpdatePlayerStateAction","console","log","players","player","AddPlayerAction","debug","p","concat","MultiplayerGame","setIndex","onSelect","invoke","on","selectedIndex","linkClasses","Navigation","shouldShowMultiplayer","showMultiplayer","to","Rules","description","lower","higher","Modal","visible","dismiss","dismissClick","clickCapture","stopPropagation","StartMultiplayerModal","failed","setFailed","nameRef","useRef","sessionRef","newPlayer","otherPlayer","off","startGame","startGameSubmit","preventDefault","joinGame","joinGameSubmit","url","signalR","withUrl","build","Promise","resolve","reject","start","then","catch","err","error","initConnection","onSubmit","ref","placeholder","type","reducer","toSave","App","showMPModal","setShowMPModal","initial","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e2296fd2.chunk.js","sourcesContent":["interface DefaultProps {\n\tchildren?: any;\n\tclassName?: string;\n}\n\ntype ButtonVariant = 'primary' | 'disabled';\n\nexport const Button = (\n\tprops: React.DetailedHTMLProps<\n\t\tReact.ButtonHTMLAttributes<HTMLButtonElement>,\n\t\tHTMLButtonElement\n\t> & { variant?: ButtonVariant },\n) => (\n\t<button\n\t\t{...props}\n\t\tclassName={`rounded p-2 pr-3 pl-3 m-1 text-xl ${buttonColor(\n\t\t\tprops.variant,\n\t\t)} ${props.className}`}\n\t/>\n);\n\nfunction buttonColor(variant?: ButtonVariant) {\n\tswitch (variant) {\n\t\tcase 'disabled':\n\t\t\treturn 'bg-gray-400 dark:bg-gray-700 cursor-not-allowed';\n\n\t\tdefault:\n\t\t\treturn 'bg-blue-400';\n\t}\n}\n\nexport const Ul = (props: DefaultProps) => (\n\t<ul className={`inline p-0 m-0 list-none ${props.className}`}>\n\t\t{props.children}\n\t</ul>\n);\nexport const Li = (props: DefaultProps) => (\n\t<li className={`flex justify-between ${props.className}`}>\n\t\t{props.children}\n\t</li>\n);\n\nexport const H3 = (\n\tprops: React.DetailedHTMLProps<\n\t\tReact.HTMLAttributes<HTMLHeadingElement>,\n\t\tHTMLHeadingElement\n\t>,\n) => (\n\t<h3\n\t\t{...props}\n\t\tclassName={`p-0 m-0 mb-2 text-xl text-center text-gray-700 dark:text-gray-400 ${props.className}`}\n\t/>\n);\n\nexport const H4 = (\n\tprops: React.DetailedHTMLProps<\n\t\tReact.HTMLAttributes<HTMLHeadingElement>,\n\t\tHTMLHeadingElement\n\t>,\n) => (\n\t<h4\n\t\t{...props}\n\t\tclassName={`text-lg my-2 text-gray-700 dark:text-gray-400 ${props.className}`}\n\t/>\n);\n\nexport const Form = (\n\tprops: React.DetailedHTMLProps<\n\t\tReact.FormHTMLAttributes<HTMLFormElement>,\n\t\tHTMLFormElement\n\t>,\n) => <form {...props} className=\"w-full flex flex-col\" />;\n\nexport const Input = (\n\tprops: React.DetailedHTMLProps<\n\t\tReact.InputHTMLAttributes<HTMLInputElement>,\n\t\tHTMLInputElement\n\t>,\n) => <input {...props} className=\"border rounded p-2 my-2\" />;\n\nexport const Line = () => <hr className=\"w-full\" />;\n","export enum Category {\n\tFours,\n\tFives,\n\tSixes,\n\tStraight,\n\tFullHouse,\n\tChance,\n\tBalut,\n}\n\nexport function categoryToString(category: Category): string {\n\tif (category === Category.FullHouse) {\n\t\treturn 'Full house';\n\t}\n\treturn Category[category];\n}\n","export const Table = (\n\tprops: React.DetailedHTMLProps<\n\t\tReact.TableHTMLAttributes<HTMLTableElement>,\n\t\tHTMLTableElement\n\t>,\n) => <table {...props} className=\"border-collapse w-full max-w-3xl\"></table>;\n\nexport const Tr = (\n\tprops: React.DetailedHTMLProps<\n\t\tReact.HTMLAttributes<HTMLTableRowElement>,\n\t\tHTMLTableRowElement\n\t>,\n) => <tr {...props} />;\n\nexport const Th = (\n\tprops: React.DetailedHTMLProps<\n\t\tReact.ThHTMLAttributes<HTMLTableHeaderCellElement>,\n\t\tHTMLTableHeaderCellElement\n\t>,\n) => <th {...props} className={`text-left border p-1 ${props.className}`} />;\n\nexport const Td = (\n\tprops: React.DetailedHTMLProps<\n\t\tReact.TdHTMLAttributes<HTMLTableDataCellElement>,\n\t\tHTMLTableDataCellElement\n\t>,\n) => (\n\t<td\n\t\t{...props}\n\t\tstyle={{ minWidth: '2.5rem' }}\n\t\tclassName={`border p-1 text-center ${props.className}`}\n\t/>\n);\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function enumStrings(e: any): string[] {\n\treturn Object.keys(e).filter((key) => typeof e[key] === 'number');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function enumValues(e: any): number[] {\n\treturn Object.keys(e)\n\t\t.filter((key) => typeof e[key] !== 'number')\n\t\t.map((x) => parseInt(x));\n}\n","import { RollLock, Roll } from './GameState';\n\nexport function randomDice(): number {\n\treturn Math.floor(Math.random() * 6) + 1;\n}\n\nexport function doRoll(locked: RollLock, current?: Roll): Roll {\n\treturn (current ?? [...Array(5)]).map((v, i) =>\n\t\tlocked[i] ? v : randomDice(),\n\t) as Roll;\n}\n\nexport function resetLocked(): RollLock {\n\treturn [...Array(5)].map(() => false) as RollLock;\n}\n\nexport function sumNumbers(roll: number[]) {\n\treturn roll.reduce((acc, v) => acc + v, 0);\n}\n","interface FinalScoreProps {\n\tpoints: number;\n}\n\nexport const FinalScore = ({ points }: FinalScoreProps) => (\n\t<div className=\"flex justify-end w-full my-2 max-w-3xl\">\n\t\t<div className=\"text-2xl border-b-2 border-white\">\n\t\t\t<span>Final score: </span>\n\t\t\t<span>{points}</span>\n\t\t</div>\n\t</div>\n);\n","import React from 'react';\nimport { Tr, Td } from '../../styles/table';\n\ninterface FooterRowProps {\n\ttotal: number;\n\textraPoints: number;\n}\n\nexport const FooterRow = ({ total, extraPoints }: FooterRowProps) => (\n\t<tfoot>\n\t\t<Tr>\n\t\t\t<td colSpan={5} />\n\t\t\t<Td>{total}</Td>\n\t\t\t<Td>{extraPoints}</Td>\n\t\t</Tr>\n\t</tfoot>\n);\n","import React from 'react';\nimport { Td, Tr } from '../../styles/table';\n\nexport const HeaderRow = () => (\n\t<thead>\n\t\t<Tr>\n\t\t\t<td colSpan={5}></td>\n\t\t\t<Td>Total</Td>\n\t\t\t<Td>Points</Td>\n\t\t</Tr>\n\t</thead>\n);\n","import { useCallback } from 'react';\nimport { Category } from '../../Category';\nimport { Td } from '../../styles/table';\nimport { WriteValue, Value } from '../Game/state/GameState';\n\ninterface CellProps {\n\tcategory: Category;\n\tvalue: Value;\n\tsuggestion?: Value;\n\tindex: number;\n\twriteValue?: WriteValue;\n}\n\nexport const Cell = ({\n\tcategory,\n\tvalue,\n\tindex,\n\tsuggestion,\n\twriteValue,\n}: CellProps) => {\n\tconst onClick = useCallback(() => {\n\t\tif (suggestion && writeValue) {\n\t\t\twriteValue(category, index, suggestion);\n\t\t}\n\t}, [writeValue, index, suggestion, category]);\n\n\treturn (\n\t\t<TdCell onClick={onClick} variant={suggestion ? 'suggestion' : 'default'}>\n\t\t\t{valueToString(value !== null ? value : suggestion)}\n\t\t</TdCell>\n\t);\n};\n\nfunction valueToString(value?: Value): string {\n\tif (value === undefined || value === null || value === 0) {\n\t\treturn '';\n\t} else if (value === 'X') {\n\t\treturn 'X';\n\t} else {\n\t\treturn value.toString();\n\t}\n}\ntype TdCellProps = {\n\tvariant: 'suggestion' | 'default';\n} & React.DetailedHTMLProps<\n\tReact.TdHTMLAttributes<HTMLTableDataCellElement>,\n\tHTMLTableDataCellElement\n>;\n\nconst TdCell = (props: TdCellProps) => (\n\t<Td\n\t\t{...props}\n\t\tclassName={`py-1 h-8 select-none bg-gray-300 dark:bg-gray-700 ${\n\t\t\tprops.variant === 'suggestion' ? 'text-blue-600' : ''\n\t\t}`}\n\t/>\n);\n","import { Category } from '../../Category';\nimport { Roll, RowState, Value } from '../Game/state/GameState';\nimport { sumNumbers } from '../Game/state/gameUtils';\n\nexport function categoryPoints(category: Category, values: RowState): number {\n\tswitch (category) {\n\t\tcase Category.Balut:\n\t\t\treturn 2 * values.filter((x) => typeof x === 'number' && x !== 0).length;\n\t\tcase Category.Chance:\n\t\t\treturn sumValues(values) >= 100 ? 2 : 0;\n\t\tcase Category.FullHouse:\n\t\t\treturn values.filter((x) => typeof x === 'number').length === 4 ? 3 : 0;\n\t\tcase Category.Straight:\n\t\t\treturn values.filter((x) => typeof x === 'number').length === 4 ? 4 : 0;\n\t\tcase Category.Sixes:\n\t\t\treturn sumValues(values) >= 78 ? 2 : 0;\n\t\tcase Category.Fives:\n\t\t\treturn sumValues(values) >= 65 ? 2 : 0;\n\t\tcase Category.Fours:\n\t\t\treturn sumValues(values) >= 52 ? 2 : 0;\n\t}\n}\n\nexport function sumValues(values: RowState): number {\n\treturn values\n\t\t.filter((x) => typeof x === 'number')\n\t\t.map((x) => x as number)\n\t\t.reduce((acc, v) => acc + v, 0);\n}\n\nconst finalPointScoreThresholds = [300, 350, 400, 450, 500, 550, 600, 650];\nexport function extraPointScore(score: number): number {\n\tlet points = -2;\n\n\tfor (const threshold of finalPointScoreThresholds) {\n\t\tif (score < threshold) {\n\t\t\tbreak;\n\t\t}\n\t\tpoints++;\n\t}\n\treturn points;\n}\n\nexport function calculateSuggestion(category: Category, roll?: Roll): Value {\n\tif (!roll) {\n\t\treturn null;\n\t}\n\n\tswitch (category) {\n\t\tcase Category.Fours:\n\t\t\treturn sumNumbers(roll.filter((x) => x === 4));\n\t\tcase Category.Fives:\n\t\t\treturn sumNumbers(roll.filter((x) => x === 5));\n\t\tcase Category.Sixes:\n\t\t\treturn sumNumbers(roll.filter((x) => x === 6));\n\t\tcase Category.Straight:\n\t\t\treturn isStraight(roll) ? sumNumbers(roll) : 'X';\n\t\tcase Category.FullHouse:\n\t\t\treturn isFullHouse(roll) ? sumNumbers(roll) : 'X';\n\t\tcase Category.Chance:\n\t\t\treturn sumNumbers(roll);\n\t\tcase Category.Balut:\n\t\t\treturn roll.every((x) => x === roll[0]) ? sumNumbers(roll) + 20 : 'X';\n\t}\n}\n\nexport function isStraight(roll: Roll): boolean {\n\treturn (\n\t\troll.some((x) => x === 1 || x === 6) &&\n\t\t[2, 3, 4, 5].every((x) => roll.includes(x))\n\t);\n}\n\nexport function isFullHouse(roll: Roll): boolean {\n\tconst values = new Set(roll);\n\tif (values.size !== 2) {\n\t\treturn false;\n\t}\n\n\treturn Array.from(values).every((v) => {\n\t\tconst count = roll.filter((x) => x === v).length;\n\t\treturn count === 3 || count === 2;\n\t});\n}\n","import React, { useMemo } from 'react';\nimport { Category, categoryToString } from '../../Category';\nimport { Td, Th, Tr } from '../../styles/table';\nimport { Roll, RowState, WriteValue } from '../Game/state/GameState';\nimport { Cell } from './Cell';\nimport { calculateSuggestion, categoryPoints, sumValues } from './rules';\n\ninterface RowProps {\n\tcategory: Category;\n\tvalues: RowState;\n\troll?: Roll;\n\twriteValue?: WriteValue;\n}\n\nexport const Row = ({ category, values, roll, writeValue }: RowProps) => {\n\tconst title = useMemo(() => categoryToString(category), [category]);\n\tconst sum = sumValues(values);\n\tconst points = categoryPoints(category, values);\n\tconst suggestion = calculateSuggestion(category, roll);\n\tconst first = values.findIndex((x) => x === null);\n\n\treturn (\n\t\t<Tr>\n\t\t\t<Th>{title}</Th>\n\t\t\t{values.map((value, i) => (\n\t\t\t\t<Cell\n\t\t\t\t\tkey={i}\n\t\t\t\t\tindex={i}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tcategory={category}\n\t\t\t\t\tsuggestion={\n\t\t\t\t\t\tfirst === i ? (suggestion === 0 ? 'X' : suggestion) : undefined\n\t\t\t\t\t}\n\t\t\t\t\twriteValue={writeValue}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<Td>{sum}</Td>\n\t\t\t<Td>{points}</Td>\n\t\t</Tr>\n\t);\n};\n","import React from 'react';\nimport { Category } from '../../Category';\nimport { Table } from '../../styles/table';\nimport { enumValues } from '../../utils/enums';\nimport { BalutValues, Roll, WriteValue } from '../Game/state/GameState';\nimport { sumNumbers } from '../Game/state/gameUtils';\nimport { FinalScore } from './FinalScore';\nimport { FooterRow } from './FooterRow';\nimport { HeaderRow } from './HeaderRow';\nimport { Row } from './Row';\nimport { categoryPoints, extraPointScore, sumValues } from './rules';\n\nconst categories = enumValues(Category);\n\ninterface BoardProps {\n\tvalues: BalutValues;\n\troll?: Roll;\n\twriteValue?: WriteValue;\n}\n\nexport const Board = ({ values, roll, writeValue }: BoardProps) => {\n\tconst total = sumNumbers(\n\t\tObject.keys(values).map((key) => sumValues(values[key])),\n\t);\n\tconst extraPoints = extraPointScore(total);\n\tconst totalPoints =\n\t\textraPoints +\n\t\tsumNumbers(\n\t\t\tenumValues(Category).map((key) => {\n\t\t\t\treturn categoryPoints(\n\t\t\t\t\tkey,\n\t\t\t\t\tvalues[(Category[key] as unknown) as number],\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<HeaderRow />\n\t\t\t\t<tbody>\n\t\t\t\t\t{categories.map((x) => (\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\tkey={x}\n\t\t\t\t\t\t\tcategory={x}\n\t\t\t\t\t\t\tvalues={values[(Category[x] as unknown) as number]}\n\t\t\t\t\t\t\troll={roll}\n\t\t\t\t\t\t\twriteValue={writeValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t\t<FooterRow extraPoints={extraPoints} total={total} />\n\t\t\t</Table>\n\t\t\t<FinalScore points={totalPoints} />\n\t\t</>\n\t);\n};\n","import { Button } from '../../styles/elements';\n\ninterface BoardControlsProps {\n\tclearBoard?: () => void;\n}\n\nexport const BoardControls = ({ clearBoard }: BoardControlsProps) => (\n\t<div className=\"flex justify-end\">\n\t\t<Button onClick={clearBoard}>New game</Button>\n\t</div>\n);\n","import React, { useCallback } from 'react';\nimport {\n\tFaDiceFive,\n\tFaDiceFour,\n\tFaDiceOne,\n\tFaDiceSix,\n\tFaDiceThree,\n\tFaDiceTwo,\n} from 'react-icons/fa/index';\nimport { IconBaseProps } from 'react-icons/lib';\n\ninterface DiceProps {\n\tdice: number;\n\tlocked: boolean;\n\tindex: number;\n\ttoggleLock: (index: number) => void;\n}\n\nexport const Dice = ({ dice, locked, index, toggleLock }: DiceProps) => {\n\tconst onClick = useCallback(() => toggleLock(index), [toggleLock, index]);\n\tconst color = locked ? 'red' : 'white';\n\n\tswitch (dice) {\n\t\tcase 1:\n\t\t\treturn <FaDiceOne {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 2:\n\t\t\treturn <FaDiceTwo {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 3:\n\t\t\treturn <FaDiceThree {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 4:\n\t\t\treturn <FaDiceFour {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 5:\n\t\t\treturn <FaDiceFive {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 6:\n\t\t\treturn <FaDiceSix {...diceStyles} color={color} onClick={onClick} />;\n\t}\n\treturn null;\n};\n\nconst diceStyles: IconBaseProps = {\n\tsize: 60,\n};\n","import React from 'react';\nimport { resetLocked } from './gameUtils';\nimport { Category } from '../../../Category';\nimport { enumStrings } from '../../../utils/enums';\n\nexport interface GameState {\n\troll?: Roll;\n\tlocked: RollLock;\n\trollNumber: number;\n\tname?: string;\n\tvalues: BalutValues;\n}\n\nexport interface GameAction {\n\treduce(state: GameState): GameState;\n}\n\nexport function gameReducer(state: GameState, action: GameAction): GameState {\n\tconst newState = action.reduce(state);\n\tlocalStorage.setItem('gameState', JSON.stringify(newState));\n\n\treturn newState;\n}\n\nexport const GameContext = React.createContext<{\n\tstate: GameState;\n\tdispatch: React.Dispatch<GameAction>;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}>({} as any);\n\nexport function initialGameState(): GameState {\n\tconst stored = localStorage.getItem('gameState');\n\n\tif (stored !== null) {\n\t\ttry {\n\t\t\treturn JSON.parse(stored) as GameState;\n\t\t} catch {}\n\t}\n\n\treturn {\n\t\trollNumber: 0,\n\t\tlocked: resetLocked(),\n\t\tvalues: initBalutValues(),\n\t};\n}\n\nexport function initBalutValues(): BalutValues {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn enumStrings(Category).reduce((acc: any, key) => {\n\t\tacc[key] = [null, null, null, null];\n\n\t\treturn acc;\n\t}, {});\n}\n\nexport type Roll = [number, number, number, number, number];\nexport type RollLock = [boolean, boolean, boolean, boolean, boolean];\n\nexport type BalutValues = { [key: string]: RowState };\n// Type to represent a entry on the Balut board.\n// 'null' = cell unused\n// 'X' = cell scratched\n// else the value entered\nexport type Value = number | 'X' | null;\nexport type RowState = [Value, Value, Value, Value];\n\nexport type WriteValue = (\n\tcategory: Category,\n\tindex: number,\n\tvalue: Value,\n) => void;\n","import { GameAction, GameState, initBalutValues } from '../GameState';\n\nexport class ClearBoard implements GameAction {\n\treduce(state: GameState): GameState {\n\t\tlocalStorage.removeItem('gameState');\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tvalues: initBalutValues(),\n\t\t};\n\t}\n}\n","import { GameAction, GameState } from '../GameState';\nimport { resetLocked } from '../gameUtils';\n\nexport class ResetRollAction implements GameAction {\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocked: resetLocked(),\n\t\t\troll: undefined,\n\t\t\trollNumber: 0,\n\t\t};\n\t}\n}\n","import { GameAction, GameState } from '../GameState';\nimport { doRoll } from '../gameUtils';\n\nexport class RollAction implements GameAction {\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\troll: doRoll(state.locked, state.roll),\n\t\t\trollNumber: state.rollNumber + 1,\n\t\t};\n\t}\n}\n","import { Category } from '../../../../Category';\nimport { Value, GameState, BalutValues, GameAction } from '../GameState';\n\nexport class StoreValue implements GameAction {\n\tpublic category: Category;\n\tpublic index: number;\n\tpublic value: Value;\n\n\tconstructor(category: Category, index: number, value: Value) {\n\t\tthis.category = category;\n\t\tthis.index = index;\n\t\tthis.value = value;\n\t}\n\n\treduce(state: GameState): GameState {\n\t\tconst values: BalutValues = {};\n\t\tObject.assign(values, state.values);\n\t\tvalues[Category[this.category]][this.index] = this.value;\n\n\t\treturn { ...state, values };\n\t}\n}\n","import { GameAction, GameState, RollLock } from '../GameState';\n\nexport class ToggleDiceAction implements GameAction {\n\tindex: number;\n\n\tconstructor(index: number) {\n\t\tthis.index = index;\n\t}\n\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocked: state.locked.map((b, i) =>\n\t\t\t\tthis.index === i ? !b : b,\n\t\t\t) as RollLock,\n\t\t};\n\t}\n}\n","import { useCallback, useEffect, useReducer, useState } from 'react';\nimport { Category } from '../../Category';\nimport { Button } from '../../styles/elements';\nimport { Board } from '../Board/Board';\nimport { BoardControls } from '../Board/BoardControls';\nimport { Dice } from './Dice';\nimport { ClearBoard } from './state/actions/ClearBoard';\nimport { ResetRollAction } from './state/actions/ResetRollAction';\nimport { RollAction } from './state/actions/RollAction';\nimport { StoreValue } from './state/actions/StoreValue';\nimport { ToggleDiceAction } from './state/actions/ToggleDiceAction';\nimport {\n\tgameReducer,\n\tinitialGameState,\n\tValue,\n\tBalutValues,\n} from './state/GameState';\nimport { doRoll } from './state/gameUtils';\n\ninterface GameProps {\n\tonTurnFinished?: (values: BalutValues) => void;\n}\n\nexport const Game = ({ onTurnFinished }: GameProps) => {\n\tconst [state, dispatch] = useReducer(gameReducer, initialGameState());\n\tconst [roll, setRoll] = useState(state.roll);\n\tuseEffect(() => setRoll(state.roll), [state.roll]);\n\n\tconst executeRoll = useCallback(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetRoll(doRoll(state.locked, state.roll));\n\t\t}, 50);\n\n\t\tsetTimeout(() => {\n\t\t\tclearInterval(interval);\n\t\t\tdispatch(new RollAction());\n\t\t}, 1000);\n\t}, [dispatch, state]);\n\tconst toggleLock = useCallback(\n\t\t(index: number) => dispatch(new ToggleDiceAction(index)),\n\t\t[dispatch],\n\t);\n\tconst newRoll = useCallback(() => {\n\t\tdispatch(new ResetRollAction());\n\t}, [dispatch]);\n\tconst writeValue = useCallback(\n\t\t(category: Category, index: number, value: Value) => {\n\t\t\tconst action = new StoreValue(category, index, value);\n\t\t\tdispatch(action);\n\t\t\tnewRoll();\n\t\t\tif (onTurnFinished) {\n\t\t\t\tonTurnFinished(action.reduce(state).values);\n\t\t\t}\n\t\t},\n\t\t[dispatch, newRoll, state, onTurnFinished],\n\t);\n\tconst clearBoard = useCallback(() => {\n\t\tdispatch(new ClearBoard());\n\t\tdispatch(new ResetRollAction());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className=\"flex flex-col items-center\">\n\t\t\t<Board roll={state.roll} values={state.values} writeValue={writeValue} />\n\t\t\t<h3>\n\t\t\t\t{state.rollNumber === 0\n\t\t\t\t\t? 'Roll your dice!'\n\t\t\t\t\t: `Roll #${state.rollNumber} of 3`}\n\t\t\t</h3>\n\t\t\t<div className=\"flex justify-center flex-wrap\">\n\t\t\t\t{roll?.map((x, i) => (\n\t\t\t\t\t<Dice\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tdice={x}\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\ttoggleLock={toggleLock}\n\t\t\t\t\t\tlocked={state.locked[i]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t<div className=\"flex my-2\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant={state.rollNumber === 3 ? 'disabled' : 'primary'}\n\t\t\t\t\tonClick={executeRoll}\n\t\t\t\t\tdisabled={state.rollNumber === 3}\n\t\t\t\t>\n\t\t\t\t\tRoll\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<BoardControls clearBoard={clearBoard} />\n\t\t</div>\n\t);\n};\n","import { HubConnection } from '@microsoft/signalr';\nimport {\n\tBalutValues,\n\tinitBalutValues,\n} from '../components/Game/state/GameState';\nimport { Action, AppState } from './AppState';\n\nexport class SetConnectionAction implements Action {\n\tconnection: HubConnection;\n\n\tconstructor(connection: HubConnection) {\n\t\tthis.connection = connection;\n\t}\n\n\treduce(state: AppState): AppState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tconnection: this.connection,\n\t\t};\n\t}\n}\n\nexport class SetSessionAction implements Action {\n\tsession: string;\n\tconstructor(session: string) {\n\t\tthis.session = session;\n\t}\n\n\treduce(state: AppState): AppState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tsession: this.session,\n\t\t};\n\t}\n}\n\nexport class SetNameAction implements Action {\n\tname: string;\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\treduce(state: AppState): AppState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tname: this.name,\n\t\t};\n\t}\n}\n\nexport class UpdatePlayerStateAction implements Action {\n\tvalues: BalutValues;\n\tname: string;\n\tconstructor(name: string, values: BalutValues) {\n\t\tthis.name = name;\n\t\tthis.values = values;\n\t}\n\n\treduce(state: AppState): AppState {\n\t\tconsole.log(`Updating player state for ${this.name}`);\n\t\treturn {\n\t\t\t...state,\n\t\t\tplayers: state.players.map((player) => {\n\t\t\t\treturn player.name === this.name\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...player,\n\t\t\t\t\t\t\tvalues: this.values,\n\t\t\t\t\t  }\n\t\t\t\t\t: player;\n\t\t\t}),\n\t\t};\n\t}\n}\n\nexport class AddPlayerAction implements Action {\n\tname: string;\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\treduce(state: AppState): AppState {\n\t\tconsole.debug(`Adding player ${this.name} to game`);\n\t\treturn {\n\t\t\t...state,\n\t\t\tplayers: state.players\n\t\t\t\t.filter((p) => p.name !== this.name)\n\t\t\t\t.concat({ name: this.name, values: initBalutValues() }),\n\t\t};\n\t}\n}\n","import { HubConnection } from '@microsoft/signalr';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { PlayerState, Action } from '../state/AppState';\nimport { Board } from './Board/Board';\nimport { Game } from './Game/Game';\nimport { UpdatePlayerStateAction } from '../state/AppActions';\n\ninterface MultiplayerGameProps {\n\tname: string;\n\tplayers: PlayerState[];\n\tconnection: HubConnection;\n\tsession: string;\n\tdispatch: React.Dispatch<Action>;\n}\n\nexport const MultiplayerGame = ({\n\tname,\n\tplayers,\n\tconnection,\n\tsession,\n\tdispatch,\n}: MultiplayerGameProps) => {\n\tconst [index, setIndex] = useState(0);\n\tconst onSelect = useCallback(\n\t\t(index) => {\n\t\t\tsetIndex(index);\n\t\t},\n\t\t[setIndex],\n\t);\n\n\tconst onTurnFinished = useCallback(\n\t\t(values) => {\n\t\t\tconsole.log('Sending state');\n\t\t\tconnection.invoke('sendState', session, name, values);\n\t\t},\n\t\t[connection, session, name],\n\t);\n\tuseEffect(() => {\n\t\tconnection.on('newState', (name, values) => {\n\t\t\tdispatch(new UpdatePlayerStateAction(name, values));\n\t\t});\n\t}, [connection, dispatch]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Tabs selectedIndex={index} onSelect={onSelect}>\n\t\t\t\t<TabList>\n\t\t\t\t\t<Tab>Me</Tab>\n\t\t\t\t\t{players.map((player) => (\n\t\t\t\t\t\t<Tab key={player.name}>{player.name}</Tab>\n\t\t\t\t\t))}\n\t\t\t\t</TabList>\n\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<Game onTurnFinished={onTurnFinished} />\n\t\t\t\t</TabPanel>\n\t\t\t\t{players.map((player) => (\n\t\t\t\t\t<TabPanel key={player.name}>\n\t\t\t\t\t\t<Board values={player.values} />\n\t\t\t\t\t</TabPanel>\n\t\t\t\t))}\n\t\t\t</Tabs>\n\t\t</div>\n\t);\n};\n","import { Link } from 'react-router-dom';\nimport { Li, Ul } from '../styles/elements';\n\ninterface NavigationProps {\n\tshouldShowMultiplayer: boolean;\n\tshowMultiplayer: () => void;\n}\n\nconst linkClasses = 'text-lg mx-2 pointer no-underline text-blue-400';\n\nexport const Navigation = ({\n\tshouldShowMultiplayer,\n\tshowMultiplayer,\n}: NavigationProps) => (\n\t<nav>\n\t\t<Ul className=\"flex flex-row\">\n\t\t\t<Li>\n\t\t\t\t<Link to=\"/\" className={linkClasses}>\n\t\t\t\t\tGame\n\t\t\t\t</Link>\n\t\t\t</Li>\n\t\t\t<Li>\n\t\t\t\t<Link to=\"/rules\" className={linkClasses}>\n\t\t\t\t\tRules\n\t\t\t\t</Link>\n\t\t\t</Li>\n\t\t\t{shouldShowMultiplayer && (\n\t\t\t\t<Li>\n\t\t\t\t\t<a onClick={showMultiplayer} className={linkClasses}>\n\t\t\t\t\t\tMultiplayer\n\t\t\t\t\t</a>\n\t\t\t\t</Li>\n\t\t\t)}\n\t\t</Ul>\n\t</nav>\n);\n","import { Category, categoryToString } from '../Category';\nimport { Li, Ul, H3, H4 } from '../styles/elements';\n\nconst points = [\n\t[Category.Fours, '52 or more', 2],\n\t[Category.Fives, '65 or more', 2],\n\t[Category.Sixes, '78 or more', 2],\n\t[Category.Straight, 'All straights', 4],\n\t[Category.FullHouse, 'All full house', 3],\n\t[Category.Chance, '100 or more', 2],\n\t[Category.Balut, 'Each balut', 2],\n];\n\nconst extraPoints = [\n\t[0, 299, -2],\n\t[300, 349, -1],\n\t[350, 399, 0],\n\t[400, 449, 1],\n\t[450, 499, 2],\n\t[500, 549, 3],\n\t[549, 599, 4],\n\t[600, 649, 5],\n\t[650, 'or above', 6],\n];\n\nexport const Rules = () => {\n\treturn (\n\t\t<div className=\"w-full flex justify-center flex-wrap\">\n\t\t\t<div className=\"w-full max-w-sm\">\n\t\t\t\t<H3>How to calculate points</H3>\n\t\t\t\t<Ul>\n\t\t\t\t\t{points.map(([category, description, points]) => (\n\t\t\t\t\t\t<Li key={category}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{categoryToString(category as Category)} - {description}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<strong>{points} points</strong>\n\t\t\t\t\t\t</Li>\n\t\t\t\t\t))}\n\t\t\t\t</Ul>\n\t\t\t\t<H4>Extra points from total score</H4>\n\t\t\t\t<Ul>\n\t\t\t\t\t{extraPoints.map(([lower, higher, points]) => (\n\t\t\t\t\t\t<Li key={points}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{lower} - {higher}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<strong>{points} points</strong>\n\t\t\t\t\t\t</Li>\n\t\t\t\t\t))}\n\t\t\t\t</Ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { useCallback } from 'react';\n\ninterface ModalProps {\n\tvisible: boolean;\n\tdismiss?: () => void;\n\tchildren?: JSX.Element;\n}\n\nexport const Modal = ({ children, visible, dismiss }: ModalProps) => {\n\tconst dismissClick = useCallback(() => {\n\t\tif (dismiss) {\n\t\t\tdismiss();\n\t\t}\n\t}, [dismiss]);\n\n\tconst clickCapture = useCallback(\n\t\t(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\t\te.stopPropagation();\n\t\t},\n\t\t[],\n\t);\n\n\tif (!visible) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tonClick={dismissClick}\n\t\t\tclassName=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-70\"\n\t\t>\n\t\t\t<div className=\"w-full h-full flex flew-row justify-center items-center\">\n\t\t\t\t<div\n\t\t\t\t\tonClick={clickCapture}\n\t\t\t\t\tclassName=\"max-w-xl flex justify-center items-center p-4 bg-gray-700 rounded\"\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { HubConnection } from '@microsoft/signalr';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { url } from '../App';\nimport { initConnection } from '../connection';\nimport {\n\tAddPlayerAction,\n\tSetConnectionAction,\n\tSetNameAction,\n\tSetSessionAction,\n} from '../state/AppActions';\nimport { Action, AppState } from '../state/AppState';\nimport { Button, Form, H3, Input, Line } from '../styles/elements';\nimport { Modal } from './Modal';\n\ninterface StartMultiplayerModalProps {\n\tvisible: boolean;\n\tdismiss: () => void;\n\tstate: AppState;\n\tdispatch: React.Dispatch<Action>;\n\tconnection?: HubConnection;\n}\n\nexport const StartMultiplayerModal = ({\n\tvisible,\n\tdismiss,\n\tstate,\n\tdispatch,\n\tconnection,\n}: StartMultiplayerModalProps) => {\n\tconst [failed, setFailed] = useState(false);\n\tconst nameRef = useRef<HTMLInputElement>(null);\n\tconst sessionRef = useRef<HTMLInputElement>(null);\n\n\tuseEffect(() => {\n\t\tif (connection) {\n\t\t\tconnection.on('joinedSession', (session, newPlayer) => {\n\t\t\t\tconsole.log(`${newPlayer} joined ${session}`);\n\t\t\t\tdispatch(new AddPlayerAction(newPlayer));\n\n\t\t\t\tconnection.invoke('sendWelcome', session, state.name);\n\t\t\t});\n\t\t\tconnection.on('welcomeFrom', (otherPlayer) => {\n\t\t\t\tconsole.log(`${otherPlayer} says welcome`);\n\t\t\t\tdispatch(new AddPlayerAction(otherPlayer));\n\t\t\t});\n\t\t}\n\t\treturn () => {\n\t\t\tconnection?.off('joinedSession');\n\t\t\tconnection?.off('welcomeFrom');\n\t\t};\n\t}, [connection, state.name, dispatch]);\n\n\t// Start game\n\tconst startGame = useCallback(() => {\n\t\tif (connection) {\n\t\t\tconnection.on('createdSession', (session) => {\n\t\t\t\tdispatch(new SetSessionAction(session));\n\t\t\t\tdismiss();\n\t\t\t});\n\t\t\tconnection.invoke('createGame');\n\t\t\tdispatch(new SetNameAction(nameRef.current?.value ?? ''));\n\t\t}\n\t}, [connection, dispatch, dismiss]);\n\tconst startGameSubmit = useCallback(\n\t\t(e: React.FormEvent<HTMLFormElement>) => {\n\t\t\te.preventDefault();\n\t\t\tstartGame();\n\t\t},\n\t\t[startGame],\n\t);\n\n\t// Join game\n\tconst joinGame = useCallback(\n\t\t(connection?: HubConnection, session?: string, name?: string) => {\n\t\t\tconsole.log(`${name} is joining ${session}`);\n\n\t\t\tif (connection && session && name) {\n\t\t\t\tconnection.invoke('join', session, name);\n\t\t\t\tdispatch(new SetSessionAction(session));\n\t\t\t\tdispatch(new SetNameAction(name));\n\t\t\t\tdismiss();\n\t\t\t}\n\t\t},\n\t\t[dismiss, dispatch],\n\t);\n\tconst joinGameSubmit = useCallback(\n\t\t(e: React.FormEvent<HTMLFormElement>) => {\n\t\t\te.preventDefault();\n\t\t\tjoinGame(connection, sessionRef.current?.value, nameRef.current?.value);\n\t\t},\n\t\t[connection, joinGame],\n\t);\n\n\tuseEffect(() => {\n\t\tinitConnection(url)\n\t\t\t.then((connection) => {\n\t\t\t\tdispatch(new SetConnectionAction(connection));\n\n\t\t\t\tif (state.session && state.name) {\n\t\t\t\t\tjoinGame(connection, state.session, state.name);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(() => setFailed(true));\n\t}, [dispatch, joinGame, setFailed, state.name, state.session]);\n\n\tif (failed) {\n\t\treturn (\n\t\t\t<Modal visible={visible} dismiss={dismiss}>\n\t\t\t\t<>Could not reach server. Try again later</>\n\t\t\t</Modal>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Modal visible={visible} dismiss={dismiss}>\n\t\t\t<div className=\"flex flex-col justify-center\">\n\t\t\t\t<H3>Create new game</H3>\n\t\t\t\t<Form onSubmit={startGameSubmit}>\n\t\t\t\t\t<Input ref={nameRef} placeholder=\"Your name\" />\n\t\t\t\t\t<Button type=\"submit\">Start</Button>\n\t\t\t\t</Form>\n\t\t\t\t<Line />\n\t\t\t\t<H3>Join a game</H3>\n\t\t\t\t<Form onSubmit={joinGameSubmit}>\n\t\t\t\t\t<Input ref={sessionRef} placeholder=\"Enter code\" />\n\t\t\t\t\t<Button type=\"submit\">Join</Button>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import * as signalR from '@microsoft/signalr';\n\nexport function initConnection(url: string): Promise<signalR.HubConnection> {\n\tconst connection = new signalR.HubConnectionBuilder().withUrl(url).build();\n\n\tconnection.on('connected', () => {\n\t\tconsole.log('connected');\n\t});\n\n\treturn new Promise((resolve, reject) => {\n\t\tconnection\n\t\t\t.start()\n\t\t\t.then(() => {\n\t\t\t\tconsole.log('Connection started');\n\t\t\t\tresolve(connection);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error('Unable to connect to server');\n\t\t\t\treject(err);\n\t\t\t});\n\t});\n}\n","import { HubConnection } from '@microsoft/signalr';\nimport { BalutValues } from '../components/Game/state/GameState';\n\nexport interface AppState {\n\tname?: string;\n\tsession?: string;\n\tconnection?: HubConnection;\n\tplayers: PlayerState[];\n}\n\nexport interface PlayerState {\n\tname: string;\n\tvalues: BalutValues;\n}\n\nexport interface Action {\n\treduce(state: AppState): AppState;\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n\tconst newState = action.reduce(state);\n\n\tconst toSave = JSON.parse(JSON.stringify(newState));\n\ttoSave.connection = undefined;\n\tlocalStorage.setItem('appState', JSON.stringify(toSave));\n\n\treturn newState;\n}\n\nexport function initial(): AppState {\n\tconst stored = localStorage.getItem('appState');\n\tif (stored) {\n\t\ttry {\n\t\t\treturn JSON.parse(stored);\n\t\t} catch {}\n\t}\n\n\treturn {\n\t\tplayers: [],\n\t};\n}\n","import { useReducer, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Game } from './components/Game/Game';\nimport { MultiplayerGame } from './components/MultiplayerGame';\nimport { Navigation } from './components/Navigation';\nimport { Rules } from './components/Rules';\nimport { StartMultiplayerModal } from './components/StartMultiplayerModal';\nimport './index.css';\nimport { initial, reducer } from './state/AppState';\n\nexport const url = 'https://localhost:5001/play';\n\nfunction App() {\n\tconst [showMPModal, setShowMPModal] = useState(false);\n\tconst [state, dispatch] = useReducer(reducer, initial());\n\n\treturn (\n\t\t<Router>\n\t\t\t<main className=\"p-3 font-display w-full min-h-screen h-full bg-gray-200 dark:bg-gray-900 text-gray-900 dark:text-gray-200\">\n\t\t\t\t<header className=\"flex flex-row justify-between\">\n\t\t\t\t\t<h1 className=\"m-0 text-5xl no-underline\">Balut</h1>\n\t\t\t\t\t<Navigation\n\t\t\t\t\t\tshouldShowMultiplayer={!!state.connection}\n\t\t\t\t\t\tshowMultiplayer={() => setShowMPModal((x) => !x)}\n\t\t\t\t\t/>\n\t\t\t\t</header>\n\n\t\t\t\t<section>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/rules\">\n\t\t\t\t\t\t\t<Rules />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t{state.session && state.connection && state.name ? (\n\t\t\t\t\t\t\t\t<MultiplayerGame\n\t\t\t\t\t\t\t\t\tname={state.name}\n\t\t\t\t\t\t\t\t\tplayers={state.players}\n\t\t\t\t\t\t\t\t\tconnection={state.connection}\n\t\t\t\t\t\t\t\t\tsession={state.session}\n\t\t\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Game />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</section>\n\t\t\t\t<StartMultiplayerModal\n\t\t\t\t\tstate={state}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\tvisible={showMPModal}\n\t\t\t\t\tdismiss={() => setShowMPModal(false)}\n\t\t\t\t\tconnection={state.connection}\n\t\t\t\t/>\n\t\t\t</main>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.',\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}