{"version":3,"sources":["Category.ts","styles/colors.ts","styles/table.ts","utils/enums.ts","styles/elements.tsx","components/Board/state/BalutState.ts","components/Board/state/actions/ClearBoard.ts","components/Board/BoardControls.tsx","components/Board/FinalScore.tsx","components/Board/FooterRow.tsx","components/Board/state/actions/ChangeName.ts","components/Board/HeaderRow.tsx","components/Board/state/actions/StoreValue.ts","components/Board/Cell.tsx","components/Board/rules.ts","components/Board/Row.tsx","components/Board/Board.tsx","components/Game/Dice.tsx","components/Game/state/gameUtils.ts","components/Game/state/actions/RollAction.ts","components/Game/state/GameState.ts","components/Game/state/actions/ToggleDiceAction.ts","components/Game/state/actions/ResetRollAction.ts","components/Game/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Category","darkColors","borderColor","theme","dark","Table","styled","table","Tr","tr","Th","th","Td","td","enumValues","e","Object","keys","filter","key","map","x","parseInt","backgroundColor","variants","disabled","primary","color","Button","button","balutReducer","state","action","newState","reduce","localStorage","setItem","JSON","stringify","balutInitial","stored","getItem","parse","values","initValues","initState","BalutContext","React","createContext","dispatch","acc","undefined","ClearBoard","removeItem","BoardControls","useContext","clearBoard","useCallback","Wrapper","variant","onClick","div","FinalScore","points","ScoreContainer","FooterRow","total","extraPoints","colSpan","ChangeName","name","this","console","log","HeaderRow","onBlur","currentTarget","innerText","NameCell","NameWrapper","NameInputField","contentEditable","dangerouslySetInnerHTML","__html","span","StoreValue","category","index","value","assign","Cell","onChange","v","textContent","numberValue","Number","toUpperCase","isNaN","TdCell","valueToString","toString","categoryPoints","Balut","length","Choice","sumValues","FullHouse","Straight","Sixes","Fives","Fours","finalPointScoreThresholds","Row","sum","i","categories","Board","reducer","useReducer","a","b","score","extraPointScore","totalPoints","Provider","Dice","dice","locked","toggleLock","diceStyles","size","doRoll","current","Array","Math","floor","random","resetLocked","RollAction","roll","rollNumber","gameReducer","initialGameState","ToggleDiceAction","ResetRollAction","Game","useState","setRoll","useEffect","executeRoll","interval","setInterval","setTimeout","clearInterval","newRoll","Container","DiceContainer","ButtonContainer","App","mode","GlobalStyle","Main","H1","mainStyles","css","main","createGlobalStyle","h1","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d392e1b.chunk.js","sourcesContent":["export enum Category {\n\tFours,\n\tFives,\n\tSixes,\n\tStraight,\n\tFullHouse,\n\tChoice,\n\tBalut,\n}\n","import theme from 'styled-theming';\n\nexport const darkColors = {\n\tborder: '#CCC',\n\tcolor: '#CCC',\n\tbackgroundColor: '#000',\n\tsecondaryBackgroundColor: '#222',\n};\n\nexport const borderColor = theme('mode', {\n\tdark: darkColors.border,\n});\n","import styled from 'styled-components';\nimport { borderColor } from './colors';\n\nexport const maxWidth = '760px';\n\nexport const Table = styled.table`\n\tborder-collapse: collapse;\n\twidth: 100%;\n\tmax-width: ${maxWidth};\n`;\n\nexport const Tr = styled.tr``;\nexport const Th = styled.th`\n\ttext-align: left;\n\tborder: 1px solid ${borderColor};\n\tpadding: 4px;\n`;\nexport const Td = styled.td`\n\tborder: 1px solid ${borderColor};\n\tpadding: 4px;\n\ttext-align: center;\n\tmin-width: 20px;\n`;\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function enumStrings(e: any): string[] {\n\treturn Object.keys(e).filter((key) => typeof e[key] === 'number');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function enumValues(e: any): number[] {\n\treturn Object.keys(e)\n\t\t.filter((key) => typeof e[key] !== 'number')\n\t\t.map((x) => parseInt(x));\n}\n","import styled from 'styled-components';\nimport theme from 'styled-theming';\nimport { darkColors } from './colors';\n\nconst backgroundColor = theme.variants('mode', 'variant', {\n\tdisabled: { dark: 'darkgray' },\n\tprimary: { dark: 'darkblue' },\n});\nconst color = theme.variants('mode', 'variant', {\n\tdisabled: { dark: darkColors.color },\n\tprimary: { dark: darkColors.color },\n});\n\nexport const Button = styled.button`\n\tbackground-color: ${backgroundColor};\n\tcolor: ${color};\n\tpadding: 10px;\n\tmargin: 6px;\n\tborder: none;\n\tborder-radius: 6px;\n\tfont-size: 1.2em;\n`;\n","import React from 'react';\nimport { enumStrings } from '../../../utils/enums';\nimport { Category } from '../../../Category';\n\n// Type to represent a entry on the Balut board.\n// 'undefined' = cell unused\n// 'X' = cell scratched\n// else the value entered\nexport type Value = number | 'X' | undefined;\nexport type RowState = [Value, Value, Value, Value];\n\nexport interface BalutState {\n\tvalues: BalutValues;\n\tname?: string;\n}\n\nexport interface BalutAction {\n\treduce(state: BalutState): BalutState;\n}\n\nexport function balutReducer(\n\tstate: BalutState,\n\taction: BalutAction,\n): BalutState {\n\tconst newState = action.reduce(state);\n\tlocalStorage.setItem('state', JSON.stringify(newState));\n\n\treturn newState;\n}\n\nexport const balutInitial: BalutState = initState();\n\nexport const BalutContext = React.createContext<{\n\tstate: BalutState;\n\tdispatch: React.Dispatch<BalutAction>;\n}>({\n\tstate: balutInitial,\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tdispatch: () => {},\n});\n\nexport type BalutValues = { [key: string]: RowState };\n\nfunction initState(): BalutState {\n\tconst stored = localStorage.getItem('state');\n\n\tif (stored !== null) {\n\t\treturn JSON.parse(stored) as BalutState;\n\t}\n\n\treturn {\n\t\tvalues: initValues(),\n\t};\n}\n\nexport function initValues() {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn enumStrings(Category).reduce((acc: any, key) => {\n\t\tacc[key] = [undefined, undefined, undefined, undefined];\n\n\t\treturn acc;\n\t}, {});\n}\n","import { BalutAction, BalutState, initValues } from '../BalutState';\n\nexport class ClearBoard implements BalutAction {\n\treduce(state: BalutState): BalutState {\n\t\tlocalStorage.removeItem('state');\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tvalues: initValues(),\n\t\t};\n\t}\n}\n","import React, { useCallback, useContext } from 'react';\nimport { Button } from '../../styles/elements';\nimport { ClearBoard } from './state/actions/ClearBoard';\nimport { BalutContext } from './state/BalutState';\nimport styled from 'styled-components';\n\nexport const BoardControls = () => {\n\tconst { dispatch } = useContext(BalutContext);\n\tconst clearBoard = useCallback(() => {\n\t\tdispatch(new ClearBoard());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Button variant=\"primary\" onClick={clearBoard}>\n\t\t\t\tClear\n\t\t\t</Button>\n\t\t</Wrapper>\n\t);\n};\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: right;\n\tmargin: 0 -6px -6px;\n`;\n","import React from 'react';\nimport { maxWidth } from '../../styles/table';\nimport styled from 'styled-components';\n\ninterface FinalScoreProps {\n\tpoints: number;\n}\n\nexport const FinalScore = ({ points }: FinalScoreProps) => (\n\t<Wrapper>\n\t\t<ScoreContainer>\n\t\t\t<span>Final score: </span>\n\t\t\t<span>{points}</span>\n\t\t</ScoreContainer>\n\t</Wrapper>\n);\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: flex-end;\n\tmargin: 6px 0;\n\tmax-width: ${maxWidth};\n`;\n\nconst ScoreContainer = styled.div`\n\tfont-size: 1.4em;\n\tborder-bottom: 1px solid white;\n`;\n","import React from 'react';\nimport { Tr, Td } from '../../styles/table';\n\ninterface FooterRowProps {\n\ttotal: number;\n\textraPoints: number;\n}\n\nexport const FooterRow = ({ total, extraPoints }: FooterRowProps) => (\n\t<tfoot>\n\t\t<Tr>\n\t\t\t<td colSpan={5} />\n\t\t\t<Td>{total}</Td>\n\t\t\t<Td>{extraPoints}</Td>\n\t\t</Tr>\n\t</tfoot>\n);\n","import { BalutAction, BalutState } from '../BalutState';\n\nexport class ChangeName implements BalutAction {\n\tname?: string;\n\n\tconstructor(name?: string) {\n\t\tthis.name = name;\n\t}\n\n\treduce(state: BalutState): BalutState {\n\t\tconsole.log(`Changing name ${this.name}`);\n\t\treturn {\n\t\t\t...state,\n\t\t\tname: this.name,\n\t\t};\n\t}\n}\n","import React, { useContext, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Td, Tr } from '../../styles/table';\nimport { BalutContext } from './state/BalutState';\nimport { ChangeName } from './state/actions/ChangeName';\n\nexport const HeaderRow = () => {\n\tconst { state, dispatch } = useContext(BalutContext);\n\tconst onBlur = useCallback(\n\t\t(e: React.FormEvent<HTMLSpanElement>) => {\n\t\t\tdispatch(new ChangeName(e.currentTarget.innerText ?? undefined));\n\t\t},\n\t\t[dispatch],\n\t);\n\n\treturn (\n\t\t<thead>\n\t\t\t<Tr>\n\t\t\t\t<NameCell colSpan={5}>\n\t\t\t\t\t<NameWrapper>\n\t\t\t\t\t\tName:\n\t\t\t\t\t\t<NameInputField\n\t\t\t\t\t\t\tcontentEditable={true}\n\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: state.name ?? '' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</NameWrapper>\n\t\t\t\t</NameCell>\n\t\t\t\t<Td>Total</Td>\n\t\t\t\t<Td>Points</Td>\n\t\t\t</Tr>\n\t\t</thead>\n\t);\n};\n\nconst NameCell = styled(Td)`\n\ttext-align: left;\n\tborder: none;\n`;\n\nconst NameWrapper = styled.div`\n\tdisplay: flex;\n`;\n\nconst NameInputField = styled.span`\n\twidth: 100%;\n\tflex-grow: 1;\n\tmargin: 0 6px;\n`;\n","import { BalutAction, BalutState, Value, BalutValues } from '../BalutState';\nimport { Category } from '../../../../Category';\n\nexport class StoreValue implements BalutAction {\n\tpublic category: Category;\n\tpublic index: number;\n\tpublic value: Value;\n\n\tconstructor(category: Category, index: number, value: Value) {\n\t\tthis.category = category;\n\t\tthis.index = index;\n\t\tthis.value = value;\n\t}\n\n\treduce(state: BalutState): BalutState {\n\t\tconsole.log(`Changing value: ${this.value}`);\n\t\tconst values: BalutValues = {};\n\t\tObject.assign(values, state.values);\n\t\tvalues[Category[this.category]][this.index] = this.value;\n\n\t\treturn { ...state, values };\n\t}\n}\n","import React, { useCallback, useContext } from 'react';\nimport styled from 'styled-components';\nimport theme from 'styled-theming';\nimport { Category } from '../../Category';\nimport { darkColors } from '../../styles/colors';\nimport { Td } from '../../styles/table';\nimport { StoreValue } from './state/actions/StoreValue';\nimport { BalutContext, Value } from './state/BalutState';\n\ninterface CellProps {\n\tcategory: Category;\n\tvalue: Value;\n\tindex: number;\n}\n\nexport const Cell = ({ category, value, index }: CellProps) => {\n\tconst { dispatch } = useContext(BalutContext);\n\n\tconst onChange = useCallback(\n\t\t(e: React.FormEvent<HTMLTableDataCellElement>) => {\n\t\t\tconst v = e.currentTarget.textContent;\n\t\t\tif (v === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst numberValue = Number(v);\n\t\t\tif (v?.toUpperCase() === 'X') {\n\t\t\t\tdispatch(new StoreValue(category, index, v.toUpperCase() as Value));\n\t\t\t} else if (!isNaN(numberValue)) {\n\t\t\t\tdispatch(new StoreValue(category, index, numberValue));\n\t\t\t}\n\t\t},\n\t\t[category, dispatch, index],\n\t);\n\n\treturn (\n\t\t<TdCell\n\t\t\tcontentEditable={true}\n\t\t\tonBlur={onChange}\n\t\t\tdangerouslySetInnerHTML={{ __html: valueToString(value) }}\n\t\t/>\n\t);\n};\n\nfunction valueToString(value: Value): string {\n\tif (value === undefined || value === null || value === 0) {\n\t\treturn '';\n\t} else if (value === 'X') {\n\t\treturn 'X';\n\t} else {\n\t\treturn value.toString();\n\t}\n}\n\nconst backgroundColor = theme('mode', {\n\tdark: darkColors.secondaryBackgroundColor,\n});\n\nconst TdCell = styled(Td)`\n\tbackground-color: ${backgroundColor};\n`;\n","import { Category } from '../../Category';\nimport { RowState } from './state/BalutState';\n\nexport function categoryPoints(category: Category, values: RowState): number {\n\tswitch (category) {\n\t\tcase Category.Balut:\n\t\t\treturn 2 * values.filter((x) => typeof x === 'number' && x !== 0).length;\n\t\tcase Category.Choice:\n\t\t\treturn sumValues(values) >= 100 ? 2 : 0;\n\t\tcase Category.FullHouse:\n\t\t\treturn values.filter((x) => typeof x === 'number').length === 4 ? 3 : 0;\n\t\tcase Category.Straight:\n\t\t\treturn values.filter((x) => typeof x === 'number').length === 4 ? 4 : 0;\n\t\tcase Category.Sixes:\n\t\t\treturn sumValues(values) >= 78 ? 2 : 0;\n\t\tcase Category.Fives:\n\t\t\treturn sumValues(values) >= 65 ? 2 : 0;\n\t\tcase Category.Fours:\n\t\t\treturn sumValues(values) >= 52 ? 2 : 0;\n\t}\n}\n\nexport function sumValues(values: RowState): number {\n\treturn values\n\t\t.filter((x) => typeof x === 'number')\n\t\t.map((x) => x as number)\n\t\t.reduce((acc, v) => acc + v, 0);\n}\n\nconst finalPointScoreThresholds = [300, 350, 400, 450, 500, 550, 600, 650];\nexport function extraPointScore(score: number): number {\n\tlet points = -2;\n\n\tfor (const threshold of finalPointScoreThresholds) {\n\t\tif (score < threshold) {\n\t\t\tbreak;\n\t\t}\n\t\tpoints++;\n\t}\n\treturn points;\n}\n","import React from 'react';\nimport { Category } from '../../Category';\nimport { Td, Th, Tr } from '../../styles/table';\nimport { Cell } from './Cell';\nimport { categoryPoints, sumValues } from './rules';\nimport { RowState } from './state/BalutState';\n\ninterface RowProps {\n\tcategory: Category;\n\tvalues: RowState;\n}\n\nexport const Row = ({ category, values }: RowProps) => {\n\tconst sum = sumValues(values);\n\tconst points = categoryPoints(category, values);\n\n\treturn (\n\t\t<Tr>\n\t\t\t<Th>{Category[category]}</Th>\n\t\t\t{values.map((value, i) => (\n\t\t\t\t<Cell key={i} index={i} value={value} category={category} />\n\t\t\t))}\n\t\t\t<Td>{sum !== 0 ? sum : ''}</Td>\n\t\t\t<Td>{points}</Td>\n\t\t</Tr>\n\t);\n};\n","import React, { useCallback, useReducer } from 'react';\nimport { Category } from '../../Category';\nimport { Table } from '../../styles/table';\nimport { enumValues } from '../../utils/enums';\nimport { BoardControls } from './BoardControls';\nimport { FinalScore } from './FinalScore';\nimport { FooterRow } from './FooterRow';\nimport { HeaderRow } from './HeaderRow';\nimport { Row } from './Row';\nimport { categoryPoints, extraPointScore, sumValues } from './rules';\nimport { BalutContext, balutInitial, balutReducer } from './state/BalutState';\n\nconst categories = enumValues(Category);\n\nexport const Board = () => {\n\tconst reducer = useCallback(balutReducer, []);\n\tconst [state, dispatch] = useReducer(reducer, balutInitial);\n\n\tconst total = Object.keys(state.values)\n\t\t.map((key) => sumValues(state.values[key]))\n\t\t.reduce((a, b) => a + b);\n\tconst extraPoints = extraPointScore(total);\n\tconst totalPoints =\n\t\textraPoints +\n\t\tenumValues(Category)\n\t\t\t.map((key) => {\n\t\t\t\treturn categoryPoints(\n\t\t\t\t\tkey,\n\t\t\t\t\tstate.values[(Category[key] as unknown) as number],\n\t\t\t\t);\n\t\t\t})\n\t\t\t.reduce((a, b) => a + b, 0);\n\n\treturn (\n\t\t<BalutContext.Provider value={{ state, dispatch }}>\n\t\t\t<Table>\n\t\t\t\t<HeaderRow />\n\t\t\t\t<tbody>\n\t\t\t\t\t{categories.map((x) => (\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\tkey={x}\n\t\t\t\t\t\t\tcategory={x}\n\t\t\t\t\t\t\tvalues={state.values[(Category[x] as unknown) as number]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t\t<FooterRow extraPoints={extraPoints} total={total} />\n\t\t\t</Table>\n\t\t\t<FinalScore points={totalPoints} />\n\t\t\t<BoardControls />\n\t\t</BalutContext.Provider>\n\t);\n};\n","import React, { useCallback } from 'react';\nimport {\n\tFaDiceFive,\n\tFaDiceFour,\n\tFaDiceOne,\n\tFaDiceSix,\n\tFaDiceThree,\n\tFaDiceTwo,\n} from 'react-icons/fa/index';\nimport { IconBaseProps } from 'react-icons/lib';\n\ninterface DiceProps {\n\tdice: number;\n\tlocked: boolean;\n\tindex: number;\n\ttoggleLock: (index: number) => void;\n}\n\nexport const Dice = ({ dice, locked, index, toggleLock }: DiceProps) => {\n\tconst onClick = useCallback(() => toggleLock(index), [toggleLock, index]);\n\tconst color = locked ? 'red' : 'white';\n\n\tswitch (dice) {\n\t\tcase 1:\n\t\t\treturn <FaDiceOne {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 2:\n\t\t\treturn <FaDiceTwo {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 3:\n\t\t\treturn <FaDiceThree {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 4:\n\t\t\treturn <FaDiceFour {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 5:\n\t\t\treturn <FaDiceFive {...diceStyles} color={color} onClick={onClick} />;\n\t\tcase 6:\n\t\t\treturn <FaDiceSix {...diceStyles} color={color} onClick={onClick} />;\n\t}\n\treturn null;\n};\n\nconst diceStyles: IconBaseProps = {\n\tsize: 80,\n};\n","import { RollLock, Roll } from './GameState';\n\nexport function randomDice(): number {\n\treturn Math.floor(Math.random() * 6) + 1;\n}\n\nexport function doRoll(locked: RollLock, current?: Roll): Roll {\n\treturn (current ?? [...Array(5)]).map((v, i) =>\n\t\tlocked[i] ? v : randomDice(),\n\t) as Roll;\n}\n\nexport function resetLocked(): RollLock {\n\treturn [...Array(5)].map(() => false) as RollLock;\n}\n","import { GameAction, GameState } from '../GameState';\nimport { doRoll } from '../gameUtils';\n\nexport class RollAction implements GameAction {\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\troll: doRoll(state.locked, state.roll),\n\t\t\trollNumber: state.rollNumber + 1,\n\t\t};\n\t}\n}\n","import React from 'react';\nimport { resetLocked } from './gameUtils';\n\nexport interface GameState {\n\troll?: Roll;\n\tlocked: RollLock;\n\trollNumber: number;\n}\n\nexport interface GameAction {\n\treduce(state: GameState): GameState;\n}\n\nexport function gameReducer(state: GameState, action: GameAction): GameState {\n\treturn action.reduce(state);\n}\n\nexport const GameContext = React.createContext<{\n\tstate: GameState;\n\tdispatch: React.Dispatch<GameAction>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}>({} as any);\n\nexport const initialGameState: GameState = {\n\trollNumber: 0,\n\tlocked: resetLocked(),\n};\n\nexport type Roll = [number, number, number, number, number];\nexport type RollLock = [boolean, boolean, boolean, boolean, boolean];\n","import { GameAction, GameState, RollLock } from '../GameState';\n\nexport class ToggleDiceAction implements GameAction {\n\tindex: number;\n\n\tconstructor(index: number) {\n\t\tthis.index = index;\n\t}\n\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocked: state.locked.map((b, i) =>\n\t\t\t\tthis.index === i ? !b : b,\n\t\t\t) as RollLock,\n\t\t};\n\t}\n}\n","import { GameAction, GameState } from '../GameState';\nimport { resetLocked } from '../gameUtils';\n\nexport class ResetRollAction implements GameAction {\n\treduce(state: GameState): GameState {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocked: resetLocked(),\n\t\t\troll: undefined,\n\t\t\trollNumber: 0,\n\t\t};\n\t}\n}\n","import React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '../../styles/elements';\nimport { Dice } from './Dice';\nimport { RollAction } from './state/actions/RollAction';\nimport { gameReducer, initialGameState } from './state/GameState';\nimport { ToggleDiceAction } from './state/actions/ToggleDiceAction';\nimport { doRoll } from './state/gameUtils';\nimport { ResetRollAction } from './state/actions/ResetRollAction';\n\nexport const Game = () => {\n\tconst [state, dispatch] = useReducer(gameReducer, initialGameState);\n\tconst [roll, setRoll] = useState(state.roll);\n\tuseEffect(() => setRoll(state.roll), [state.roll]);\n\n\tconst executeRoll = useCallback(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetRoll(doRoll(state.locked, state.roll));\n\t\t}, 50);\n\n\t\tsetTimeout(() => {\n\t\t\tclearInterval(interval);\n\t\t\tdispatch(new RollAction());\n\t\t}, 1000);\n\t}, [dispatch, state]);\n\tconst toggleLock = useCallback(\n\t\t(index: number) => dispatch(new ToggleDiceAction(index)),\n\t\t[dispatch],\n\t);\n\tconst newRoll = useCallback(() => {\n\t\tdispatch(new ResetRollAction());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<h3>\n\t\t\t\t{state.rollNumber === 0\n\t\t\t\t\t? 'Roll your dice!'\n\t\t\t\t\t: `Roll #${state.rollNumber} of 3`}\n\t\t\t</h3>\n\t\t\t<DiceContainer>\n\t\t\t\t{roll?.map((x, i) => (\n\t\t\t\t\t<Dice\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tdice={x}\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\ttoggleLock={toggleLock}\n\t\t\t\t\t\tlocked={state.locked[i]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</DiceContainer>\n\n\t\t\t<ButtonContainer>\n\t\t\t\t<Button\n\t\t\t\t\tvariant={state.rollNumber === 3 ? 'disabled' : 'primary'}\n\t\t\t\t\tonClick={executeRoll}\n\t\t\t\t\tdisabled={state.rollNumber === 3}\n\t\t\t\t>\n\t\t\t\t\tRoll\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"primary\" onClick={newRoll}>\n\t\t\t\t\tNew turn\n\t\t\t\t</Button>\n\t\t\t</ButtonContainer>\n\t\t</Container>\n\t);\n};\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst DiceContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n`;\n\nconst ButtonContainer = styled.div`\n\tdisplay: flex;\n\tmargin: 6px -6px;\n`;\n","import React, { useState } from 'react';\nimport styled, {\n\tcreateGlobalStyle,\n\tcss,\n\tThemeProvider,\n} from 'styled-components';\nimport theme from 'styled-theming';\nimport { Board } from './components/Board/Board';\nimport { darkColors } from './styles/colors';\nimport { Game } from './components/Game/Game';\n\nfunction App() {\n\tconst [theme, setCurrentTheme] = useState<string>(\n\t\tlocalStorage.getItem('theme') ?? 'dark',\n\t);\n\n\t// const setTheme = useCallback(\n\t// \t(theme: string) => {\n\t// \t\tlocalStorage.setItem('theme', theme);\n\t// \t\tsetCurrentTheme(theme);\n\t// \t},\n\t// \t[setCurrentTheme],\n\t// );\n\n\treturn (\n\t\t<ThemeProvider theme={{ mode: theme }}>\n\t\t\t<GlobalStyle />\n\t\t\t<Main>\n\t\t\t\t<header>\n\t\t\t\t\t<H1>Balut</H1>\n\t\t\t\t</header>\n\t\t\t\t<section>\n\t\t\t\t\t<Board />\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<Game />\n\t\t\t\t</section>\n\t\t\t</Main>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n\nconst mainStyles = theme('mode', {\n\tdark: css`\n\t\tbackground-color: ${darkColors.backgroundColor};\n\t\tcolor: ${darkColors.color};\n\t`,\n});\n\nconst Main = styled.main`\n\t${mainStyles}\n\tpadding: 12px;\n`;\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tfont-family: Futura;\n\t\t${mainStyles}\n\t}\n`;\n\nconst H1 = styled.h1`\n\tmargin: 0;\n\tfont-size: 3em;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}